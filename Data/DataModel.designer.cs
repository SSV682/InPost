#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="InPost_test")]
	public partial class DataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertАктыНаУничтожение(АктыНаУничтожение instance);
    partial void UpdateАктыНаУничтожение(АктыНаУничтожение instance);
    partial void DeleteАктыНаУничтожение(АктыНаУничтожение instance);
    partial void InsertШаблоныКратСод(ШаблоныКратСод instance);
    partial void UpdateШаблоныКратСод(ШаблоныКратСод instance);
    partial void DeleteШаблоныКратСод(ШаблоныКратСод instance);
    partial void InsertВидДокумента(ВидДокумента instance);
    partial void UpdateВидДокумента(ВидДокумента instance);
    partial void DeleteВидДокумента(ВидДокумента instance);
    partial void InsertВидИКраткоеСодержание(ВидИКраткоеСодержание instance);
    partial void UpdateВидИКраткоеСодержание(ВидИКраткоеСодержание instance);
    partial void DeleteВидИКраткоеСодержание(ВидИКраткоеСодержание instance);
    partial void InsertВидимостьДокументаПользователями(ВидимостьДокументаПользователями instance);
    partial void UpdateВидимостьДокументаПользователями(ВидимостьДокументаПользователями instance);
    partial void DeleteВидимостьДокументаПользователями(ВидимостьДокументаПользователями instance);
    partial void InsertВидимостьПольномочийПользователя(ВидимостьПольномочийПользователя instance);
    partial void UpdateВидимостьПольномочийПользователя(ВидимостьПольномочийПользователя instance);
    partial void DeleteВидимостьПольномочийПользователя(ВидимостьПольномочийПользователя instance);
    partial void InsertГрифы(Грифы instance);
    partial void UpdateГрифы(Грифы instance);
    partial void DeleteГрифы(Грифы instance);
    partial void InsertДокументы(Документы instance);
    partial void UpdateДокументы(Документы instance);
    partial void DeleteДокументы(Документы instance);
    partial void InsertДокументыРедактора(ДокументыРедактора instance);
    partial void UpdateДокументыРедактора(ДокументыРедактора instance);
    partial void DeleteДокументыРедактора(ДокументыРедактора instance);
    partial void InsertЖурналОпераций(ЖурналОпераций instance);
    partial void UpdateЖурналОпераций(ЖурналОпераций instance);
    partial void DeleteЖурналОпераций(ЖурналОпераций instance);
    partial void InsertЖурналы(Журналы instance);
    partial void UpdateЖурналы(Журналы instance);
    partial void DeleteЖурналы(Журналы instance);
    partial void InsertИсполненыеДокументы(ИсполненыеДокументы instance);
    partial void UpdateИсполненыеДокументы(ИсполненыеДокументы instance);
    partial void DeleteИсполненыеДокументы(ИсполненыеДокументы instance);
    partial void InsertИсполнители(Исполнители instance);
    partial void UpdateИсполнители(Исполнители instance);
    partial void DeleteИсполнители(Исполнители instance);
    partial void InsertКомуАдресован(КомуАдресован instance);
    partial void UpdateКомуАдресован(КомуАдресован instance);
    partial void DeleteКомуАдресован(КомуАдресован instance);
    partial void InsertОперации(Операции instance);
    partial void UpdateОперации(Операции instance);
    partial void DeleteОперации(Операции instance);
    partial void InsertПодразделения(Подразделения instance);
    partial void UpdateПодразделения(Подразделения instance);
    partial void DeleteПодразделения(Подразделения instance);
    partial void InsertПодразделенияИсполнителей(ПодразделенияИсполнителей instance);
    partial void UpdateПодразделенияИсполнителей(ПодразделенияИсполнителей instance);
    partial void DeleteПодразделенияИсполнителей(ПодразделенияИсполнителей instance);
    partial void InsertПользователи(Пользователи instance);
    partial void UpdateПользователи(Пользователи instance);
    partial void DeleteПользователи(Пользователи instance);
    partial void InsertРазмерыГрида(РазмерыГрида instance);
    partial void UpdateРазмерыГрида(РазмерыГрида instance);
    partial void DeleteРазмерыГрида(РазмерыГрида instance);
    partial void InsertРезолюция(Резолюция instance);
    partial void UpdateРезолюция(Резолюция instance);
    partial void DeleteРезолюция(Резолюция instance);
    partial void InsertРолиПолномочийПользователей(РолиПолномочийПользователей instance);
    partial void UpdateРолиПолномочийПользователей(РолиПолномочийПользователей instance);
    partial void DeleteРолиПолномочийПользователей(РолиПолномочийПользователей instance);
    #endregion
		
		public DataModelDataContext() : 
				base(global::Data.Properties.Settings.Default.InPost_testConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<АктыНаУничтожение> АктыНаУничтожениеs
		{
			get
			{
				return this.GetTable<АктыНаУничтожение>();
			}
		}
		
		public System.Data.Linq.Table<ШаблоныКратСод> ШаблоныКратСодs
		{
			get
			{
				return this.GetTable<ШаблоныКратСод>();
			}
		}
		
		public System.Data.Linq.Table<ВидДокумента> ВидДокументаs
		{
			get
			{
				return this.GetTable<ВидДокумента>();
			}
		}
		
		public System.Data.Linq.Table<ВидИКраткоеСодержание> ВидИКраткоеСодержаниеs
		{
			get
			{
				return this.GetTable<ВидИКраткоеСодержание>();
			}
		}
		
		public System.Data.Linq.Table<ВидимостьДокументаПользователями> ВидимостьДокументаПользователямиs
		{
			get
			{
				return this.GetTable<ВидимостьДокументаПользователями>();
			}
		}
		
		public System.Data.Linq.Table<ВидимостьПольномочийПользователя> ВидимостьПольномочийПользователяs
		{
			get
			{
				return this.GetTable<ВидимостьПольномочийПользователя>();
			}
		}
		
		public System.Data.Linq.Table<Грифы> Грифыs
		{
			get
			{
				return this.GetTable<Грифы>();
			}
		}
		
		public System.Data.Linq.Table<Документы> Документыs
		{
			get
			{
				return this.GetTable<Документы>();
			}
		}
		
		public System.Data.Linq.Table<ДокументыРедактора> ДокументыРедактораs
		{
			get
			{
				return this.GetTable<ДокументыРедактора>();
			}
		}
		
		public System.Data.Linq.Table<ЖурналОпераций> ЖурналОперацийs
		{
			get
			{
				return this.GetTable<ЖурналОпераций>();
			}
		}
		
		public System.Data.Linq.Table<Журналы> Журналыs
		{
			get
			{
				return this.GetTable<Журналы>();
			}
		}
		
		public System.Data.Linq.Table<ИсполненыеДокументы> ИсполненыеДокументыs
		{
			get
			{
				return this.GetTable<ИсполненыеДокументы>();
			}
		}
		
		public System.Data.Linq.Table<Исполнители> Исполнителиs
		{
			get
			{
				return this.GetTable<Исполнители>();
			}
		}
		
		public System.Data.Linq.Table<КомуАдресован> КомуАдресованs
		{
			get
			{
				return this.GetTable<КомуАдресован>();
			}
		}
		
		public System.Data.Linq.Table<Операции> Операцииs
		{
			get
			{
				return this.GetTable<Операции>();
			}
		}
		
		public System.Data.Linq.Table<Подразделения> Подразделенияs
		{
			get
			{
				return this.GetTable<Подразделения>();
			}
		}
		
		public System.Data.Linq.Table<ПодразделенияИсполнителей> ПодразделенияИсполнителейs
		{
			get
			{
				return this.GetTable<ПодразделенияИсполнителей>();
			}
		}
		
		public System.Data.Linq.Table<Пользователи> Пользователиs
		{
			get
			{
				return this.GetTable<Пользователи>();
			}
		}
		
		public System.Data.Linq.Table<РазмерыГрида> РазмерыГридаs
		{
			get
			{
				return this.GetTable<РазмерыГрида>();
			}
		}
		
		public System.Data.Linq.Table<Резолюция> Резолюцияs
		{
			get
			{
				return this.GetTable<Резолюция>();
			}
		}
		
		public System.Data.Linq.Table<РолиПолномочийПользователей> РолиПолномочийПользователейs
		{
			get
			{
				return this.GetTable<РолиПолномочийПользователей>();
			}
		}
		
		public System.Data.Linq.Table<ДокРедактор> ДокРедакторs
		{
			get
			{
				return this.GetTable<ДокРедактор>();
			}
		}
		
		public System.Data.Linq.Table<МестоположениеДокумента> МестоположениеДокументаs
		{
			get
			{
				return this.GetTable<МестоположениеДокумента>();
			}
		}
		
		public System.Data.Linq.Table<ДокументыИсполнителей> ДокументыИсполнителейs
		{
			get
			{
				return this.GetTable<ДокументыИсполнителей>();
			}
		}
		
		public System.Data.Linq.Table<КоличествоЗакрытыхДокументов> КоличествоЗакрытыхДокументовs
		{
			get
			{
				return this.GetTable<КоличествоЗакрытыхДокументов>();
			}
		}
		
		public System.Data.Linq.Table<КоличествоЗакрытыхДокументовИсполнителем> КоличествоЗакрытыхДокументовИсполнителемs
		{
			get
			{
				return this.GetTable<КоличествоЗакрытыхДокументовИсполнителем>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDocumentsByView", IsComposable=true)]
		public object GetDocumentsByView([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> yearS, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(8000)")] string stringS)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), yearS, stringS).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.УдалитьПоследнююРезолюцию")]
		public int УдалитьПоследнююРезолюцию([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id_doc", DbType="BigInt")] System.Nullable<long> id_doc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_doc);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDocumentsByYear")]
		public ISingleResult<GetDocumentsByYearResult> GetDocumentsByYear([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year);
			return ((ISingleResult<GetDocumentsByYearResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetExecutor")]
		public ISingleResult<GetExecutorResult> GetExecutor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id_doc", DbType="BigInt")] System.Nullable<long> id_doc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_doc);
			return ((ISingleResult<GetExecutorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetExecutorByRecipient")]
		public ISingleResult<GetExecutorByRecipientResult> GetExecutorByRecipient([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> id_recipient)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_recipient);
			return ((ISingleResult<GetExecutorByRecipientResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetIdDocumentsFromExecutor")]
		public ISingleResult<GetIdDocumentsFromExecutorResult> GetIdDocumentsFromExecutor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> id_executor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_executor);
			return ((ISingleResult<GetIdDocumentsFromExecutorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetLocation")]
		public ISingleResult<GetLocationResult> GetLocation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id_doc", DbType="BigInt")] System.Nullable<long> id_doc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_doc);
			return ((ISingleResult<GetLocationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MyProc6")]
		public int MyProc6()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ЗаписатьДанныйВТаблицуВидимостиДокументов")]
		public int ЗаписатьДанныйВТаблицуВидимостиДокументов()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ОчиститьПоляАкта")]
		public int ОчиститьПоляАкта([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id_doc", DbType="BigInt")] System.Nullable<long> id_doc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_doc);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.РедактироватьДанныйВТаблицуВидимостиДокументов")]
		public int РедактироватьДанныйВТаблицуВидимостиДокументов()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDocsByView", IsComposable=true)]
		public IQueryable<GetDocsByViewResult> GetDocsByView([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(8000)")] string stringS, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> yearS)
		{
			return this.CreateMethodCallQuery<GetDocsByViewResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stringS, yearS);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ПолучитьВходящийНомер", IsComposable=true)]
		public System.Nullable<int> ПолучитьВходящийНомер()
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDocsByYear", IsComposable=true)]
		public IQueryable<GetDocsByYearResult> GetDocsByYear([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> yearS)
		{
			return this.CreateMethodCallQuery<GetDocsByYearResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), yearS);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ПолучитьIDПользователя", IsComposable=true)]
		public System.Nullable<int> ПолучитьIDПользователя()
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.АктыНаУничтожение")]
	public partial class АктыНаУничтожение : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код_акта;
		
		private System.Nullable<System.DateTime> _Дата;
		
		private bool _АктИсполнен;
		
		private string _Индекс;
		
		private string _НомерАкта;
		
		private System.Nullable<int> _Год;
		
		private string _ДатаСоздания;
		
		private bool _ДокументСоздан;
		
		private EntitySet<ДокументыРедактора> _ДокументыРедактораs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКод_актаChanging(int value);
    partial void OnКод_актаChanged();
    partial void OnДатаChanging(System.Nullable<System.DateTime> value);
    partial void OnДатаChanged();
    partial void OnАктИсполненChanging(bool value);
    partial void OnАктИсполненChanged();
    partial void OnИндексChanging(string value);
    partial void OnИндексChanged();
    partial void OnНомерАктаChanging(string value);
    partial void OnНомерАктаChanged();
    partial void OnГодChanging(System.Nullable<int> value);
    partial void OnГодChanged();
    partial void OnДатаСозданияChanging(string value);
    partial void OnДатаСозданияChanged();
    partial void OnДокументСозданChanging(bool value);
    partial void OnДокументСозданChanged();
    #endregion
		
		public АктыНаУничтожение()
		{
			this._ДокументыРедактораs = new EntitySet<ДокументыРедактора>(new Action<ДокументыРедактора>(this.attach_ДокументыРедактораs), new Action<ДокументыРедактора>(this.detach_ДокументыРедактораs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код_акта", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Код_акта
		{
			get
			{
				return this._Код_акта;
			}
			set
			{
				if ((this._Код_акта != value))
				{
					this.OnКод_актаChanging(value);
					this.SendPropertyChanging();
					this._Код_акта = value;
					this.SendPropertyChanged("Код_акта");
					this.OnКод_актаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата", DbType="DateTime")]
		public System.Nullable<System.DateTime> Дата
		{
			get
			{
				return this._Дата;
			}
			set
			{
				if ((this._Дата != value))
				{
					this.OnДатаChanging(value);
					this.SendPropertyChanging();
					this._Дата = value;
					this.SendPropertyChanged("Дата");
					this.OnДатаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_АктИсполнен", DbType="Bit NOT NULL")]
		public bool АктИсполнен
		{
			get
			{
				return this._АктИсполнен;
			}
			set
			{
				if ((this._АктИсполнен != value))
				{
					this.OnАктИсполненChanging(value);
					this.SendPropertyChanging();
					this._АктИсполнен = value;
					this.SendPropertyChanged("АктИсполнен");
					this.OnАктИсполненChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Индекс", DbType="VarChar(50)")]
		public string Индекс
		{
			get
			{
				return this._Индекс;
			}
			set
			{
				if ((this._Индекс != value))
				{
					this.OnИндексChanging(value);
					this.SendPropertyChanging();
					this._Индекс = value;
					this.SendPropertyChanged("Индекс");
					this.OnИндексChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомерАкта", DbType="VarChar(50)")]
		public string НомерАкта
		{
			get
			{
				return this._НомерАкта;
			}
			set
			{
				if ((this._НомерАкта != value))
				{
					this.OnНомерАктаChanging(value);
					this.SendPropertyChanging();
					this._НомерАкта = value;
					this.SendPropertyChanged("НомерАкта");
					this.OnНомерАктаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Год", DbType="Int")]
		public System.Nullable<int> Год
		{
			get
			{
				return this._Год;
			}
			set
			{
				if ((this._Год != value))
				{
					this.OnГодChanging(value);
					this.SendPropertyChanging();
					this._Год = value;
					this.SendPropertyChanged("Год");
					this.OnГодChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаСоздания", DbType="VarChar(50)")]
		public string ДатаСоздания
		{
			get
			{
				return this._ДатаСоздания;
			}
			set
			{
				if ((this._ДатаСоздания != value))
				{
					this.OnДатаСозданияChanging(value);
					this.SendPropertyChanging();
					this._ДатаСоздания = value;
					this.SendPropertyChanged("ДатаСоздания");
					this.OnДатаСозданияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДокументСоздан", DbType="Bit NOT NULL")]
		public bool ДокументСоздан
		{
			get
			{
				return this._ДокументСоздан;
			}
			set
			{
				if ((this._ДокументСоздан != value))
				{
					this.OnДокументСозданChanging(value);
					this.SendPropertyChanging();
					this._ДокументСоздан = value;
					this.SendPropertyChanged("ДокументСоздан");
					this.OnДокументСозданChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="АктыНаУничтожение_ДокументыРедактора", Storage="_ДокументыРедактораs", ThisKey="Код_акта", OtherKey="Код_акта")]
		public EntitySet<ДокументыРедактора> ДокументыРедактораs
		{
			get
			{
				return this._ДокументыРедактораs;
			}
			set
			{
				this._ДокументыРедактораs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ДокументыРедактораs(ДокументыРедактора entity)
		{
			this.SendPropertyChanging();
			entity.АктыНаУничтожение = this;
		}
		
		private void detach_ДокументыРедактораs(ДокументыРедактора entity)
		{
			this.SendPropertyChanging();
			entity.АктыНаУничтожение = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ШаблоныКратСод")]
	public partial class ШаблоныКратСод : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _id_шаблона;
		
		private string _Шаблон;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_шаблонаChanging(byte value);
    partial void Onid_шаблонаChanged();
    partial void OnШаблонChanging(string value);
    partial void OnШаблонChanged();
    #endregion
		
		public ШаблоныКратСод()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_шаблона", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte id_шаблона
		{
			get
			{
				return this._id_шаблона;
			}
			set
			{
				if ((this._id_шаблона != value))
				{
					this.Onid_шаблонаChanging(value);
					this.SendPropertyChanging();
					this._id_шаблона = value;
					this.SendPropertyChanged("id_шаблона");
					this.Onid_шаблонаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Шаблон", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Шаблон
		{
			get
			{
				return this._Шаблон;
			}
			set
			{
				if ((this._Шаблон != value))
				{
					this.OnШаблонChanging(value);
					this.SendPropertyChanging();
					this._Шаблон = value;
					this.SendPropertyChanged("Шаблон");
					this.OnШаблонChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ВидДокумента")]
	public partial class ВидДокумента : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_видДокумента;
		
		private string _Вид;
		
		private EntitySet<Документы> _Документыs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_видДокументаChanging(int value);
    partial void Onid_видДокументаChanged();
    partial void OnВидChanging(string value);
    partial void OnВидChanged();
    #endregion
		
		public ВидДокумента()
		{
			this._Документыs = new EntitySet<Документы>(new Action<Документы>(this.attach_Документыs), new Action<Документы>(this.detach_Документыs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_видДокумента", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_видДокумента
		{
			get
			{
				return this._id_видДокумента;
			}
			set
			{
				if ((this._id_видДокумента != value))
				{
					this.Onid_видДокументаChanging(value);
					this.SendPropertyChanging();
					this._id_видДокумента = value;
					this.SendPropertyChanged("id_видДокумента");
					this.Onid_видДокументаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Вид", DbType="VarChar(128)")]
		public string Вид
		{
			get
			{
				return this._Вид;
			}
			set
			{
				if ((this._Вид != value))
				{
					this.OnВидChanging(value);
					this.SendPropertyChanging();
					this._Вид = value;
					this.SendPropertyChanged("Вид");
					this.OnВидChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ВидДокумента_Документы", Storage="_Документыs", ThisKey="id_видДокумента", OtherKey="id_виддокумента")]
		public EntitySet<Документы> Документыs
		{
			get
			{
				return this._Документыs;
			}
			set
			{
				this._Документыs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Документыs(Документы entity)
		{
			this.SendPropertyChanging();
			entity.ВидДокумента = this;
		}
		
		private void detach_Документыs(Документы entity)
		{
			this.SendPropertyChanging();
			entity.ВидДокумента = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ВидИКраткоеСодержание")]
	public partial class ВидИКраткоеСодержание : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_записи;
		
		private long _id_документа;
		
		private string _Текст;
		
		private bool _ПризнакПечати;
		
		private int _НомерСтроки;
		
		private EntityRef<Документы> _Документы;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_записиChanging(long value);
    partial void Onid_записиChanged();
    partial void Onid_документаChanging(long value);
    partial void Onid_документаChanged();
    partial void OnТекстChanging(string value);
    partial void OnТекстChanged();
    partial void OnПризнакПечатиChanging(bool value);
    partial void OnПризнакПечатиChanged();
    partial void OnНомерСтрокиChanging(int value);
    partial void OnНомерСтрокиChanged();
    #endregion
		
		public ВидИКраткоеСодержание()
		{
			this._Документы = default(EntityRef<Документы>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_записи", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_записи
		{
			get
			{
				return this._id_записи;
			}
			set
			{
				if ((this._id_записи != value))
				{
					this.Onid_записиChanging(value);
					this.SendPropertyChanging();
					this._id_записи = value;
					this.SendPropertyChanged("id_записи");
					this.Onid_записиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_документа", DbType="BigInt NOT NULL")]
		public long id_документа
		{
			get
			{
				return this._id_документа;
			}
			set
			{
				if ((this._id_документа != value))
				{
					if (this._Документы.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_документаChanging(value);
					this.SendPropertyChanging();
					this._id_документа = value;
					this.SendPropertyChanged("id_документа");
					this.Onid_документаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Текст", DbType="VarChar(64)")]
		public string Текст
		{
			get
			{
				return this._Текст;
			}
			set
			{
				if ((this._Текст != value))
				{
					this.OnТекстChanging(value);
					this.SendPropertyChanging();
					this._Текст = value;
					this.SendPropertyChanged("Текст");
					this.OnТекстChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПризнакПечати", DbType="Bit NOT NULL")]
		public bool ПризнакПечати
		{
			get
			{
				return this._ПризнакПечати;
			}
			set
			{
				if ((this._ПризнакПечати != value))
				{
					this.OnПризнакПечатиChanging(value);
					this.SendPropertyChanging();
					this._ПризнакПечати = value;
					this.SendPropertyChanged("ПризнакПечати");
					this.OnПризнакПечатиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомерСтроки", DbType="Int NOT NULL")]
		public int НомерСтроки
		{
			get
			{
				return this._НомерСтроки;
			}
			set
			{
				if ((this._НомерСтроки != value))
				{
					this.OnНомерСтрокиChanging(value);
					this.SendPropertyChanging();
					this._НомерСтроки = value;
					this.SendPropertyChanged("НомерСтроки");
					this.OnНомерСтрокиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Документы_ВидИКраткоеСодержание", Storage="_Документы", ThisKey="id_документа", OtherKey="id_документа", IsForeignKey=true)]
		public Документы Документы
		{
			get
			{
				return this._Документы.Entity;
			}
			set
			{
				Документы previousValue = this._Документы.Entity;
				if (((previousValue != value) 
							|| (this._Документы.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Документы.Entity = null;
						previousValue.ВидИКраткоеСодержаниеs.Remove(this);
					}
					this._Документы.Entity = value;
					if ((value != null))
					{
						value.ВидИКраткоеСодержаниеs.Add(this);
						this._id_документа = value.id_документа;
					}
					else
					{
						this._id_документа = default(long);
					}
					this.SendPropertyChanged("Документы");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ВидимостьДокументаПользователями")]
	public partial class ВидимостьДокументаПользователями : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_записи;
		
		private long _id_документа;
		
		private int _id_исполнителя;
		
		private bool _редактируемый;
		
		private bool _видимый;
		
		private EntityRef<Документы> _Документы;
		
		private EntityRef<Исполнители> _Исполнители;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_записиChanging(int value);
    partial void Onid_записиChanged();
    partial void Onid_документаChanging(long value);
    partial void Onid_документаChanged();
    partial void Onid_исполнителяChanging(int value);
    partial void Onid_исполнителяChanged();
    partial void OnредактируемыйChanging(bool value);
    partial void OnредактируемыйChanged();
    partial void OnвидимыйChanging(bool value);
    partial void OnвидимыйChanged();
    #endregion
		
		public ВидимостьДокументаПользователями()
		{
			this._Документы = default(EntityRef<Документы>);
			this._Исполнители = default(EntityRef<Исполнители>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_записи", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_записи
		{
			get
			{
				return this._id_записи;
			}
			set
			{
				if ((this._id_записи != value))
				{
					this.Onid_записиChanging(value);
					this.SendPropertyChanging();
					this._id_записи = value;
					this.SendPropertyChanged("id_записи");
					this.Onid_записиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_документа", DbType="BigInt NOT NULL")]
		public long id_документа
		{
			get
			{
				return this._id_документа;
			}
			set
			{
				if ((this._id_документа != value))
				{
					if (this._Документы.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_документаChanging(value);
					this.SendPropertyChanging();
					this._id_документа = value;
					this.SendPropertyChanged("id_документа");
					this.Onid_документаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_исполнителя", DbType="Int NOT NULL")]
		public int id_исполнителя
		{
			get
			{
				return this._id_исполнителя;
			}
			set
			{
				if ((this._id_исполнителя != value))
				{
					if (this._Исполнители.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_исполнителяChanging(value);
					this.SendPropertyChanging();
					this._id_исполнителя = value;
					this.SendPropertyChanged("id_исполнителя");
					this.Onid_исполнителяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_редактируемый", DbType="Bit NOT NULL")]
		public bool редактируемый
		{
			get
			{
				return this._редактируемый;
			}
			set
			{
				if ((this._редактируемый != value))
				{
					this.OnредактируемыйChanging(value);
					this.SendPropertyChanging();
					this._редактируемый = value;
					this.SendPropertyChanged("редактируемый");
					this.OnредактируемыйChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_видимый", DbType="Bit NOT NULL")]
		public bool видимый
		{
			get
			{
				return this._видимый;
			}
			set
			{
				if ((this._видимый != value))
				{
					this.OnвидимыйChanging(value);
					this.SendPropertyChanging();
					this._видимый = value;
					this.SendPropertyChanged("видимый");
					this.OnвидимыйChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Документы_ВидимостьДокументаПользователями", Storage="_Документы", ThisKey="id_документа", OtherKey="id_документа", IsForeignKey=true)]
		public Документы Документы
		{
			get
			{
				return this._Документы.Entity;
			}
			set
			{
				Документы previousValue = this._Документы.Entity;
				if (((previousValue != value) 
							|| (this._Документы.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Документы.Entity = null;
						previousValue.ВидимостьДокументаПользователямиs.Remove(this);
					}
					this._Документы.Entity = value;
					if ((value != null))
					{
						value.ВидимостьДокументаПользователямиs.Add(this);
						this._id_документа = value.id_документа;
					}
					else
					{
						this._id_документа = default(long);
					}
					this.SendPropertyChanged("Документы");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Исполнители_ВидимостьДокументаПользователями", Storage="_Исполнители", ThisKey="id_исполнителя", OtherKey="id_исполнителя", IsForeignKey=true)]
		public Исполнители Исполнители
		{
			get
			{
				return this._Исполнители.Entity;
			}
			set
			{
				Исполнители previousValue = this._Исполнители.Entity;
				if (((previousValue != value) 
							|| (this._Исполнители.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Исполнители.Entity = null;
						previousValue.ВидимостьДокументаПользователямиs.Remove(this);
					}
					this._Исполнители.Entity = value;
					if ((value != null))
					{
						value.ВидимостьДокументаПользователямиs.Add(this);
						this._id_исполнителя = value.id_исполнителя;
					}
					else
					{
						this._id_исполнителя = default(int);
					}
					this.SendPropertyChanged("Исполнители");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ВидимостьПольномочийПользователя")]
	public partial class ВидимостьПольномочийПользователя : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_записи;
		
		private int _id_подразделения;
		
		private int _id_пользователя;
		
		private EntityRef<ПодразделенияИсполнителей> _ПодразделенияИсполнителей;
		
		private EntityRef<Пользователи> _Пользователи;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_записиChanging(int value);
    partial void Onid_записиChanged();
    partial void Onid_подразделенияChanging(int value);
    partial void Onid_подразделенияChanged();
    partial void Onid_пользователяChanging(int value);
    partial void Onid_пользователяChanged();
    #endregion
		
		public ВидимостьПольномочийПользователя()
		{
			this._ПодразделенияИсполнителей = default(EntityRef<ПодразделенияИсполнителей>);
			this._Пользователи = default(EntityRef<Пользователи>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_записи", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_записи
		{
			get
			{
				return this._id_записи;
			}
			set
			{
				if ((this._id_записи != value))
				{
					this.Onid_записиChanging(value);
					this.SendPropertyChanging();
					this._id_записи = value;
					this.SendPropertyChanged("id_записи");
					this.Onid_записиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_подразделения", DbType="Int NOT NULL")]
		public int id_подразделения
		{
			get
			{
				return this._id_подразделения;
			}
			set
			{
				if ((this._id_подразделения != value))
				{
					if (this._ПодразделенияИсполнителей.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_подразделенияChanging(value);
					this.SendPropertyChanging();
					this._id_подразделения = value;
					this.SendPropertyChanged("id_подразделения");
					this.Onid_подразделенияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_пользователя", DbType="Int NOT NULL")]
		public int id_пользователя
		{
			get
			{
				return this._id_пользователя;
			}
			set
			{
				if ((this._id_пользователя != value))
				{
					if (this._Пользователи.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_пользователяChanging(value);
					this.SendPropertyChanging();
					this._id_пользователя = value;
					this.SendPropertyChanged("id_пользователя");
					this.Onid_пользователяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ПодразделенияИсполнителей_ВидимостьПольномочийПользователя", Storage="_ПодразделенияИсполнителей", ThisKey="id_подразделения", OtherKey="id_подразделения", IsForeignKey=true)]
		public ПодразделенияИсполнителей ПодразделенияИсполнителей
		{
			get
			{
				return this._ПодразделенияИсполнителей.Entity;
			}
			set
			{
				ПодразделенияИсполнителей previousValue = this._ПодразделенияИсполнителей.Entity;
				if (((previousValue != value) 
							|| (this._ПодразделенияИсполнителей.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ПодразделенияИсполнителей.Entity = null;
						previousValue.ВидимостьПольномочийПользователяs.Remove(this);
					}
					this._ПодразделенияИсполнителей.Entity = value;
					if ((value != null))
					{
						value.ВидимостьПольномочийПользователяs.Add(this);
						this._id_подразделения = value.id_подразделения;
					}
					else
					{
						this._id_подразделения = default(int);
					}
					this.SendPropertyChanged("ПодразделенияИсполнителей");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Пользователи_ВидимостьПольномочийПользователя", Storage="_Пользователи", ThisKey="id_пользователя", OtherKey="id_пользователя", IsForeignKey=true)]
		public Пользователи Пользователи
		{
			get
			{
				return this._Пользователи.Entity;
			}
			set
			{
				Пользователи previousValue = this._Пользователи.Entity;
				if (((previousValue != value) 
							|| (this._Пользователи.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Пользователи.Entity = null;
						previousValue.ВидимостьПольномочийПользователяs.Remove(this);
					}
					this._Пользователи.Entity = value;
					if ((value != null))
					{
						value.ВидимостьПольномочийПользователяs.Add(this);
						this._id_пользователя = value.id_пользователя;
					}
					else
					{
						this._id_пользователя = default(int);
					}
					this.SendPropertyChanged("Пользователи");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Грифы")]
	public partial class Грифы : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _id_грифа;
		
		private string _Гриф;
		
		private EntitySet<Документы> _Документыs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_грифаChanging(byte value);
    partial void Onid_грифаChanged();
    partial void OnГрифChanging(string value);
    partial void OnГрифChanged();
    #endregion
		
		public Грифы()
		{
			this._Документыs = new EntitySet<Документы>(new Action<Документы>(this.attach_Документыs), new Action<Документы>(this.detach_Документыs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_грифа", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte id_грифа
		{
			get
			{
				return this._id_грифа;
			}
			set
			{
				if ((this._id_грифа != value))
				{
					this.Onid_грифаChanging(value);
					this.SendPropertyChanging();
					this._id_грифа = value;
					this.SendPropertyChanged("id_грифа");
					this.Onid_грифаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Гриф", DbType="VarChar(50)")]
		public string Гриф
		{
			get
			{
				return this._Гриф;
			}
			set
			{
				if ((this._Гриф != value))
				{
					this.OnГрифChanging(value);
					this.SendPropertyChanging();
					this._Гриф = value;
					this.SendPropertyChanged("Гриф");
					this.OnГрифChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Грифы_Документы", Storage="_Документыs", ThisKey="id_грифа", OtherKey="id_грифа")]
		public EntitySet<Документы> Документыs
		{
			get
			{
				return this._Документыs;
			}
			set
			{
				this._Документыs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Документыs(Документы entity)
		{
			this.SendPropertyChanging();
			entity.Грифы = this;
		}
		
		private void detach_Документыs(Документы entity)
		{
			this.SendPropertyChanging();
			entity.Грифы = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Документы")]
	public partial class Документы : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_документа;
		
		private System.Nullable<byte> _id_грифа;
		
		private string _РегНомер;
		
		private System.Nullable<int> _ВходящийНомер;
		
		private System.Nullable<System.DateTime> _ДатаПодписи;
		
		private System.Nullable<System.DateTime> _ДатаРегистрации;
		
		private System.Nullable<int> _id_подразделения;
		
		private string _НомерЭкземпляра;
		
		private string _КоличествоЛистовЭкзепляра;
		
		private string _КоличествоЛистовПриложения;
		
		private System.Nullable<int> _id_получателя;
		
		private System.Nullable<int> _id_журанала;
		
		private System.Nullable<int> _id_пользователя;
		
		private System.Nullable<int> _Код_акта;
		
		private string _ИсполнениеНомер;
		
		private System.Nullable<System.DateTime> _ДатаИсполнения;
		
		private string _ДелоНомер;
		
		private string _Том;
		
		private string _Лист;
		
		private string _Индекс;
		
		private string _НазваниеДокумента;
		
		private string _НазваниеПриложения;
		
		private string _Подписной;
		
		private System.Nullable<bool> _ПризнакПечати;
		
		private string _НомераПриложений;
		
		private string _КомментарийКому;
		
		private string _КомментарийОткуда;
		
		private bool _запретИзменения;
		
		private string _номерДокумента;
		
		private string _от;
		
		private System.Nullable<bool> _Наличие;
		
		private string _от2;
		
		private System.Nullable<int> _id_виддокумента;
		
		private string _Акт;
		
		private bool _ПризнакПечатиВЖурнале;
		
		private System.Nullable<System.DateTime> _ДатаКонтроля;
		
		private string _ДопМатериалы;
		
		private string _Исполнение;
		
		private bool _НаУдаление;
		
		private string _ПолныйВходящийНомер;
		
		private System.Nullable<System.DateTime> _ДатаВозврата;
		
		private bool _Вернуть;
		
		private bool _Закрыт;
		
		private System.Nullable<long> _Перерегистрирован;
		
		private System.Nullable<int> _id_исполнителя;
		
		private EntitySet<ВидИКраткоеСодержание> _ВидИКраткоеСодержаниеs;
		
		private EntitySet<ВидимостьДокументаПользователями> _ВидимостьДокументаПользователямиs;
		
		private EntitySet<ЖурналОпераций> _ЖурналОперацийs;
		
		private EntitySet<Резолюция> _Резолюцияs;
		
		private EntityRef<ВидДокумента> _ВидДокумента;
		
		private EntityRef<Грифы> _Грифы;
		
		private EntityRef<Журналы> _Журналы;
		
		private EntityRef<КомуАдресован> _КомуАдресован;
		
		private EntityRef<Подразделения> _Подразделения;
		
		private EntityRef<Пользователи> _Пользователи;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_документаChanging(long value);
    partial void Onid_документаChanged();
    partial void Onid_грифаChanging(System.Nullable<byte> value);
    partial void Onid_грифаChanged();
    partial void OnРегНомерChanging(string value);
    partial void OnРегНомерChanged();
    partial void OnВходящийНомерChanging(System.Nullable<int> value);
    partial void OnВходящийНомерChanged();
    partial void OnДатаПодписиChanging(System.Nullable<System.DateTime> value);
    partial void OnДатаПодписиChanged();
    partial void OnДатаРегистрацииChanging(System.Nullable<System.DateTime> value);
    partial void OnДатаРегистрацииChanged();
    partial void Onid_подразделенияChanging(System.Nullable<int> value);
    partial void Onid_подразделенияChanged();
    partial void OnНомерЭкземпляраChanging(string value);
    partial void OnНомерЭкземпляраChanged();
    partial void OnКоличествоЛистовЭкзепляраChanging(string value);
    partial void OnКоличествоЛистовЭкзепляраChanged();
    partial void OnКоличествоЛистовПриложенияChanging(string value);
    partial void OnКоличествоЛистовПриложенияChanged();
    partial void Onid_получателяChanging(System.Nullable<int> value);
    partial void Onid_получателяChanged();
    partial void Onid_жураналаChanging(System.Nullable<int> value);
    partial void Onid_жураналаChanged();
    partial void Onid_пользователяChanging(System.Nullable<int> value);
    partial void Onid_пользователяChanged();
    partial void OnКод_актаChanging(System.Nullable<int> value);
    partial void OnКод_актаChanged();
    partial void OnИсполнениеНомерChanging(string value);
    partial void OnИсполнениеНомерChanged();
    partial void OnДатаИсполненияChanging(System.Nullable<System.DateTime> value);
    partial void OnДатаИсполненияChanged();
    partial void OnДелоНомерChanging(string value);
    partial void OnДелоНомерChanged();
    partial void OnТомChanging(string value);
    partial void OnТомChanged();
    partial void OnЛистChanging(string value);
    partial void OnЛистChanged();
    partial void OnИндексChanging(string value);
    partial void OnИндексChanged();
    partial void OnНазваниеДокументаChanging(string value);
    partial void OnНазваниеДокументаChanged();
    partial void OnНазваниеПриложенияChanging(string value);
    partial void OnНазваниеПриложенияChanged();
    partial void OnПодписнойChanging(string value);
    partial void OnПодписнойChanged();
    partial void OnПризнакПечатиChanging(System.Nullable<bool> value);
    partial void OnПризнакПечатиChanged();
    partial void OnНомераПриложенийChanging(string value);
    partial void OnНомераПриложенийChanged();
    partial void OnКомментарийКомуChanging(string value);
    partial void OnКомментарийКомуChanged();
    partial void OnКомментарийОткудаChanging(string value);
    partial void OnКомментарийОткудаChanged();
    partial void OnзапретИзмененияChanging(bool value);
    partial void OnзапретИзмененияChanged();
    partial void OnномерДокументаChanging(string value);
    partial void OnномерДокументаChanged();
    partial void OnотChanging(string value);
    partial void OnотChanged();
    partial void OnНаличиеChanging(System.Nullable<bool> value);
    partial void OnНаличиеChanged();
    partial void Onот2Changing(string value);
    partial void Onот2Changed();
    partial void Onid_виддокументаChanging(System.Nullable<int> value);
    partial void Onid_виддокументаChanged();
    partial void OnАктChanging(string value);
    partial void OnАктChanged();
    partial void OnПризнакПечатиВЖурналеChanging(bool value);
    partial void OnПризнакПечатиВЖурналеChanged();
    partial void OnДатаКонтроляChanging(System.Nullable<System.DateTime> value);
    partial void OnДатаКонтроляChanged();
    partial void OnДопМатериалыChanging(string value);
    partial void OnДопМатериалыChanged();
    partial void OnИсполнениеChanging(string value);
    partial void OnИсполнениеChanged();
    partial void OnНаУдалениеChanging(bool value);
    partial void OnНаУдалениеChanged();
    partial void OnПолныйВходящийНомерChanging(string value);
    partial void OnПолныйВходящийНомерChanged();
    partial void OnДатаВозвратаChanging(System.Nullable<System.DateTime> value);
    partial void OnДатаВозвратаChanged();
    partial void OnВернутьChanging(bool value);
    partial void OnВернутьChanged();
    partial void OnЗакрытChanging(bool value);
    partial void OnЗакрытChanged();
    partial void OnПеререгистрированChanging(System.Nullable<long> value);
    partial void OnПеререгистрированChanged();
    partial void Onid_исполнителяChanging(System.Nullable<int> value);
    partial void Onid_исполнителяChanged();
    #endregion
		
		public Документы()
		{
			this._ВидИКраткоеСодержаниеs = new EntitySet<ВидИКраткоеСодержание>(new Action<ВидИКраткоеСодержание>(this.attach_ВидИКраткоеСодержаниеs), new Action<ВидИКраткоеСодержание>(this.detach_ВидИКраткоеСодержаниеs));
			this._ВидимостьДокументаПользователямиs = new EntitySet<ВидимостьДокументаПользователями>(new Action<ВидимостьДокументаПользователями>(this.attach_ВидимостьДокументаПользователямиs), new Action<ВидимостьДокументаПользователями>(this.detach_ВидимостьДокументаПользователямиs));
			this._ЖурналОперацийs = new EntitySet<ЖурналОпераций>(new Action<ЖурналОпераций>(this.attach_ЖурналОперацийs), new Action<ЖурналОпераций>(this.detach_ЖурналОперацийs));
			this._Резолюцияs = new EntitySet<Резолюция>(new Action<Резолюция>(this.attach_Резолюцияs), new Action<Резолюция>(this.detach_Резолюцияs));
			this._ВидДокумента = default(EntityRef<ВидДокумента>);
			this._Грифы = default(EntityRef<Грифы>);
			this._Журналы = default(EntityRef<Журналы>);
			this._КомуАдресован = default(EntityRef<КомуАдресован>);
			this._Подразделения = default(EntityRef<Подразделения>);
			this._Пользователи = default(EntityRef<Пользователи>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_документа", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_документа
		{
			get
			{
				return this._id_документа;
			}
			set
			{
				if ((this._id_документа != value))
				{
					this.Onid_документаChanging(value);
					this.SendPropertyChanging();
					this._id_документа = value;
					this.SendPropertyChanged("id_документа");
					this.Onid_документаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_грифа", DbType="TinyInt")]
		public System.Nullable<byte> id_грифа
		{
			get
			{
				return this._id_грифа;
			}
			set
			{
				if ((this._id_грифа != value))
				{
					if (this._Грифы.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_грифаChanging(value);
					this.SendPropertyChanging();
					this._id_грифа = value;
					this.SendPropertyChanged("id_грифа");
					this.Onid_грифаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_РегНомер", DbType="VarChar(64)")]
		public string РегНомер
		{
			get
			{
				return this._РегНомер;
			}
			set
			{
				if ((this._РегНомер != value))
				{
					this.OnРегНомерChanging(value);
					this.SendPropertyChanging();
					this._РегНомер = value;
					this.SendPropertyChanged("РегНомер");
					this.OnРегНомерChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ВходящийНомер", DbType="Int")]
		public System.Nullable<int> ВходящийНомер
		{
			get
			{
				return this._ВходящийНомер;
			}
			set
			{
				if ((this._ВходящийНомер != value))
				{
					this.OnВходящийНомерChanging(value);
					this.SendPropertyChanging();
					this._ВходящийНомер = value;
					this.SendPropertyChanged("ВходящийНомер");
					this.OnВходящийНомерChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаПодписи", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаПодписи
		{
			get
			{
				return this._ДатаПодписи;
			}
			set
			{
				if ((this._ДатаПодписи != value))
				{
					this.OnДатаПодписиChanging(value);
					this.SendPropertyChanging();
					this._ДатаПодписи = value;
					this.SendPropertyChanged("ДатаПодписи");
					this.OnДатаПодписиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаРегистрации", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаРегистрации
		{
			get
			{
				return this._ДатаРегистрации;
			}
			set
			{
				if ((this._ДатаРегистрации != value))
				{
					this.OnДатаРегистрацииChanging(value);
					this.SendPropertyChanging();
					this._ДатаРегистрации = value;
					this.SendPropertyChanged("ДатаРегистрации");
					this.OnДатаРегистрацииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_подразделения", DbType="Int")]
		public System.Nullable<int> id_подразделения
		{
			get
			{
				return this._id_подразделения;
			}
			set
			{
				if ((this._id_подразделения != value))
				{
					if (this._Подразделения.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_подразделенияChanging(value);
					this.SendPropertyChanging();
					this._id_подразделения = value;
					this.SendPropertyChanged("id_подразделения");
					this.Onid_подразделенияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомерЭкземпляра", DbType="VarChar(50)")]
		public string НомерЭкземпляра
		{
			get
			{
				return this._НомерЭкземпляра;
			}
			set
			{
				if ((this._НомерЭкземпляра != value))
				{
					this.OnНомерЭкземпляраChanging(value);
					this.SendPropertyChanging();
					this._НомерЭкземпляра = value;
					this.SendPropertyChanged("НомерЭкземпляра");
					this.OnНомерЭкземпляраChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоЛистовЭкзепляра", DbType="VarChar(50)")]
		public string КоличествоЛистовЭкзепляра
		{
			get
			{
				return this._КоличествоЛистовЭкзепляра;
			}
			set
			{
				if ((this._КоличествоЛистовЭкзепляра != value))
				{
					this.OnКоличествоЛистовЭкзепляраChanging(value);
					this.SendPropertyChanging();
					this._КоличествоЛистовЭкзепляра = value;
					this.SendPropertyChanged("КоличествоЛистовЭкзепляра");
					this.OnКоличествоЛистовЭкзепляраChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоЛистовПриложения", DbType="VarChar(50)")]
		public string КоличествоЛистовПриложения
		{
			get
			{
				return this._КоличествоЛистовПриложения;
			}
			set
			{
				if ((this._КоличествоЛистовПриложения != value))
				{
					this.OnКоличествоЛистовПриложенияChanging(value);
					this.SendPropertyChanging();
					this._КоличествоЛистовПриложения = value;
					this.SendPropertyChanged("КоличествоЛистовПриложения");
					this.OnКоличествоЛистовПриложенияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_получателя", DbType="Int")]
		public System.Nullable<int> id_получателя
		{
			get
			{
				return this._id_получателя;
			}
			set
			{
				if ((this._id_получателя != value))
				{
					if (this._КомуАдресован.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_получателяChanging(value);
					this.SendPropertyChanging();
					this._id_получателя = value;
					this.SendPropertyChanged("id_получателя");
					this.Onid_получателяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_журанала", DbType="Int")]
		public System.Nullable<int> id_журанала
		{
			get
			{
				return this._id_журанала;
			}
			set
			{
				if ((this._id_журанала != value))
				{
					if (this._Журналы.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_жураналаChanging(value);
					this.SendPropertyChanging();
					this._id_журанала = value;
					this.SendPropertyChanged("id_журанала");
					this.Onid_жураналаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_пользователя", DbType="Int")]
		public System.Nullable<int> id_пользователя
		{
			get
			{
				return this._id_пользователя;
			}
			set
			{
				if ((this._id_пользователя != value))
				{
					if (this._Пользователи.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_пользователяChanging(value);
					this.SendPropertyChanging();
					this._id_пользователя = value;
					this.SendPropertyChanged("id_пользователя");
					this.Onid_пользователяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код_акта", DbType="Int")]
		public System.Nullable<int> Код_акта
		{
			get
			{
				return this._Код_акта;
			}
			set
			{
				if ((this._Код_акта != value))
				{
					this.OnКод_актаChanging(value);
					this.SendPropertyChanging();
					this._Код_акта = value;
					this.SendPropertyChanged("Код_акта");
					this.OnКод_актаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИсполнениеНомер", DbType="VarChar(128)")]
		public string ИсполнениеНомер
		{
			get
			{
				return this._ИсполнениеНомер;
			}
			set
			{
				if ((this._ИсполнениеНомер != value))
				{
					this.OnИсполнениеНомерChanging(value);
					this.SendPropertyChanging();
					this._ИсполнениеНомер = value;
					this.SendPropertyChanged("ИсполнениеНомер");
					this.OnИсполнениеНомерChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаИсполнения", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаИсполнения
		{
			get
			{
				return this._ДатаИсполнения;
			}
			set
			{
				if ((this._ДатаИсполнения != value))
				{
					this.OnДатаИсполненияChanging(value);
					this.SendPropertyChanging();
					this._ДатаИсполнения = value;
					this.SendPropertyChanged("ДатаИсполнения");
					this.OnДатаИсполненияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДелоНомер", DbType="VarChar(50)")]
		public string ДелоНомер
		{
			get
			{
				return this._ДелоНомер;
			}
			set
			{
				if ((this._ДелоНомер != value))
				{
					this.OnДелоНомерChanging(value);
					this.SendPropertyChanging();
					this._ДелоНомер = value;
					this.SendPropertyChanged("ДелоНомер");
					this.OnДелоНомерChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Том", DbType="VarChar(50)")]
		public string Том
		{
			get
			{
				return this._Том;
			}
			set
			{
				if ((this._Том != value))
				{
					this.OnТомChanging(value);
					this.SendPropertyChanging();
					this._Том = value;
					this.SendPropertyChanged("Том");
					this.OnТомChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Лист", DbType="VarChar(50)")]
		public string Лист
		{
			get
			{
				return this._Лист;
			}
			set
			{
				if ((this._Лист != value))
				{
					this.OnЛистChanging(value);
					this.SendPropertyChanging();
					this._Лист = value;
					this.SendPropertyChanged("Лист");
					this.OnЛистChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Индекс", DbType="VarChar(50)")]
		public string Индекс
		{
			get
			{
				return this._Индекс;
			}
			set
			{
				if ((this._Индекс != value))
				{
					this.OnИндексChanging(value);
					this.SendPropertyChanging();
					this._Индекс = value;
					this.SendPropertyChanged("Индекс");
					this.OnИндексChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазваниеДокумента", DbType="VarChar(256)")]
		public string НазваниеДокумента
		{
			get
			{
				return this._НазваниеДокумента;
			}
			set
			{
				if ((this._НазваниеДокумента != value))
				{
					this.OnНазваниеДокументаChanging(value);
					this.SendPropertyChanging();
					this._НазваниеДокумента = value;
					this.SendPropertyChanged("НазваниеДокумента");
					this.OnНазваниеДокументаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазваниеПриложения", DbType="VarChar(256)")]
		public string НазваниеПриложения
		{
			get
			{
				return this._НазваниеПриложения;
			}
			set
			{
				if ((this._НазваниеПриложения != value))
				{
					this.OnНазваниеПриложенияChanging(value);
					this.SendPropertyChanging();
					this._НазваниеПриложения = value;
					this.SendPropertyChanged("НазваниеПриложения");
					this.OnНазваниеПриложенияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Подписной", DbType="VarChar(50)")]
		public string Подписной
		{
			get
			{
				return this._Подписной;
			}
			set
			{
				if ((this._Подписной != value))
				{
					this.OnПодписнойChanging(value);
					this.SendPropertyChanging();
					this._Подписной = value;
					this.SendPropertyChanged("Подписной");
					this.OnПодписнойChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПризнакПечати", DbType="Bit")]
		public System.Nullable<bool> ПризнакПечати
		{
			get
			{
				return this._ПризнакПечати;
			}
			set
			{
				if ((this._ПризнакПечати != value))
				{
					this.OnПризнакПечатиChanging(value);
					this.SendPropertyChanging();
					this._ПризнакПечати = value;
					this.SendPropertyChanged("ПризнакПечати");
					this.OnПризнакПечатиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомераПриложений", DbType="VarChar(128)")]
		public string НомераПриложений
		{
			get
			{
				return this._НомераПриложений;
			}
			set
			{
				if ((this._НомераПриложений != value))
				{
					this.OnНомераПриложенийChanging(value);
					this.SendPropertyChanging();
					this._НомераПриложений = value;
					this.SendPropertyChanged("НомераПриложений");
					this.OnНомераПриложенийChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КомментарийКому", DbType="VarChar(128)")]
		public string КомментарийКому
		{
			get
			{
				return this._КомментарийКому;
			}
			set
			{
				if ((this._КомментарийКому != value))
				{
					this.OnКомментарийКомуChanging(value);
					this.SendPropertyChanging();
					this._КомментарийКому = value;
					this.SendPropertyChanged("КомментарийКому");
					this.OnКомментарийКомуChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КомментарийОткуда", DbType="VarChar(128)")]
		public string КомментарийОткуда
		{
			get
			{
				return this._КомментарийОткуда;
			}
			set
			{
				if ((this._КомментарийОткуда != value))
				{
					this.OnКомментарийОткудаChanging(value);
					this.SendPropertyChanging();
					this._КомментарийОткуда = value;
					this.SendPropertyChanged("КомментарийОткуда");
					this.OnКомментарийОткудаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_запретИзменения", DbType="Bit NOT NULL")]
		public bool запретИзменения
		{
			get
			{
				return this._запретИзменения;
			}
			set
			{
				if ((this._запретИзменения != value))
				{
					this.OnзапретИзмененияChanging(value);
					this.SendPropertyChanging();
					this._запретИзменения = value;
					this.SendPropertyChanged("запретИзменения");
					this.OnзапретИзмененияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_номерДокумента", DbType="VarChar(256)")]
		public string номерДокумента
		{
			get
			{
				return this._номерДокумента;
			}
			set
			{
				if ((this._номерДокумента != value))
				{
					this.OnномерДокументаChanging(value);
					this.SendPropertyChanging();
					this._номерДокумента = value;
					this.SendPropertyChanged("номерДокумента");
					this.OnномерДокументаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_от", DbType="VarChar(50)")]
		public string от
		{
			get
			{
				return this._от;
			}
			set
			{
				if ((this._от != value))
				{
					this.OnотChanging(value);
					this.SendPropertyChanging();
					this._от = value;
					this.SendPropertyChanged("от");
					this.OnотChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Наличие", DbType="Bit")]
		public System.Nullable<bool> Наличие
		{
			get
			{
				return this._Наличие;
			}
			set
			{
				if ((this._Наличие != value))
				{
					this.OnНаличиеChanging(value);
					this.SendPropertyChanging();
					this._Наличие = value;
					this.SendPropertyChanged("Наличие");
					this.OnНаличиеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_от2", DbType="VarChar(50)")]
		public string от2
		{
			get
			{
				return this._от2;
			}
			set
			{
				if ((this._от2 != value))
				{
					this.Onот2Changing(value);
					this.SendPropertyChanging();
					this._от2 = value;
					this.SendPropertyChanged("от2");
					this.Onот2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_виддокумента", DbType="Int")]
		public System.Nullable<int> id_виддокумента
		{
			get
			{
				return this._id_виддокумента;
			}
			set
			{
				if ((this._id_виддокумента != value))
				{
					if (this._ВидДокумента.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_виддокументаChanging(value);
					this.SendPropertyChanging();
					this._id_виддокумента = value;
					this.SendPropertyChanged("id_виддокумента");
					this.Onid_виддокументаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Акт", DbType="VarChar(50)")]
		public string Акт
		{
			get
			{
				return this._Акт;
			}
			set
			{
				if ((this._Акт != value))
				{
					this.OnАктChanging(value);
					this.SendPropertyChanging();
					this._Акт = value;
					this.SendPropertyChanged("Акт");
					this.OnАктChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПризнакПечатиВЖурнале", DbType="Bit NOT NULL")]
		public bool ПризнакПечатиВЖурнале
		{
			get
			{
				return this._ПризнакПечатиВЖурнале;
			}
			set
			{
				if ((this._ПризнакПечатиВЖурнале != value))
				{
					this.OnПризнакПечатиВЖурналеChanging(value);
					this.SendPropertyChanging();
					this._ПризнакПечатиВЖурнале = value;
					this.SendPropertyChanged("ПризнакПечатиВЖурнале");
					this.OnПризнакПечатиВЖурналеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаКонтроля", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаКонтроля
		{
			get
			{
				return this._ДатаКонтроля;
			}
			set
			{
				if ((this._ДатаКонтроля != value))
				{
					this.OnДатаКонтроляChanging(value);
					this.SendPropertyChanging();
					this._ДатаКонтроля = value;
					this.SendPropertyChanged("ДатаКонтроля");
					this.OnДатаКонтроляChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДопМатериалы", DbType="VarChar(50)")]
		public string ДопМатериалы
		{
			get
			{
				return this._ДопМатериалы;
			}
			set
			{
				if ((this._ДопМатериалы != value))
				{
					this.OnДопМатериалыChanging(value);
					this.SendPropertyChanging();
					this._ДопМатериалы = value;
					this.SendPropertyChanged("ДопМатериалы");
					this.OnДопМатериалыChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Исполнение", DbType="VarChar(256)")]
		public string Исполнение
		{
			get
			{
				return this._Исполнение;
			}
			set
			{
				if ((this._Исполнение != value))
				{
					this.OnИсполнениеChanging(value);
					this.SendPropertyChanging();
					this._Исполнение = value;
					this.SendPropertyChanged("Исполнение");
					this.OnИсполнениеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НаУдаление", DbType="Bit NOT NULL")]
		public bool НаУдаление
		{
			get
			{
				return this._НаУдаление;
			}
			set
			{
				if ((this._НаУдаление != value))
				{
					this.OnНаУдалениеChanging(value);
					this.SendPropertyChanging();
					this._НаУдаление = value;
					this.SendPropertyChanged("НаУдаление");
					this.OnНаУдалениеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПолныйВходящийНомер", DbType="VarChar(50)")]
		public string ПолныйВходящийНомер
		{
			get
			{
				return this._ПолныйВходящийНомер;
			}
			set
			{
				if ((this._ПолныйВходящийНомер != value))
				{
					this.OnПолныйВходящийНомерChanging(value);
					this.SendPropertyChanging();
					this._ПолныйВходящийНомер = value;
					this.SendPropertyChanged("ПолныйВходящийНомер");
					this.OnПолныйВходящийНомерChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаВозврата", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаВозврата
		{
			get
			{
				return this._ДатаВозврата;
			}
			set
			{
				if ((this._ДатаВозврата != value))
				{
					this.OnДатаВозвратаChanging(value);
					this.SendPropertyChanging();
					this._ДатаВозврата = value;
					this.SendPropertyChanged("ДатаВозврата");
					this.OnДатаВозвратаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Вернуть", DbType="Bit NOT NULL")]
		public bool Вернуть
		{
			get
			{
				return this._Вернуть;
			}
			set
			{
				if ((this._Вернуть != value))
				{
					this.OnВернутьChanging(value);
					this.SendPropertyChanging();
					this._Вернуть = value;
					this.SendPropertyChanged("Вернуть");
					this.OnВернутьChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Закрыт", DbType="Bit NOT NULL")]
		public bool Закрыт
		{
			get
			{
				return this._Закрыт;
			}
			set
			{
				if ((this._Закрыт != value))
				{
					this.OnЗакрытChanging(value);
					this.SendPropertyChanging();
					this._Закрыт = value;
					this.SendPropertyChanged("Закрыт");
					this.OnЗакрытChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Перерегистрирован", DbType="BigInt")]
		public System.Nullable<long> Перерегистрирован
		{
			get
			{
				return this._Перерегистрирован;
			}
			set
			{
				if ((this._Перерегистрирован != value))
				{
					this.OnПеререгистрированChanging(value);
					this.SendPropertyChanging();
					this._Перерегистрирован = value;
					this.SendPropertyChanged("Перерегистрирован");
					this.OnПеререгистрированChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_исполнителя", DbType="Int", UpdateCheck=UpdateCheck.WhenChanged)]
		public System.Nullable<int> id_исполнителя
		{
			get
			{
				return this._id_исполнителя;
			}
			set
			{
				if ((this._id_исполнителя != value))
				{
					this.Onid_исполнителяChanging(value);
					this.SendPropertyChanging();
					this._id_исполнителя = value;
					this.SendPropertyChanged("id_исполнителя");
					this.Onid_исполнителяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Документы_ВидИКраткоеСодержание", Storage="_ВидИКраткоеСодержаниеs", ThisKey="id_документа", OtherKey="id_документа")]
		public EntitySet<ВидИКраткоеСодержание> ВидИКраткоеСодержаниеs
		{
			get
			{
				return this._ВидИКраткоеСодержаниеs;
			}
			set
			{
				this._ВидИКраткоеСодержаниеs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Документы_ВидимостьДокументаПользователями", Storage="_ВидимостьДокументаПользователямиs", ThisKey="id_документа", OtherKey="id_документа")]
		public EntitySet<ВидимостьДокументаПользователями> ВидимостьДокументаПользователямиs
		{
			get
			{
				return this._ВидимостьДокументаПользователямиs;
			}
			set
			{
				this._ВидимостьДокументаПользователямиs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Документы_ЖурналОпераций", Storage="_ЖурналОперацийs", ThisKey="id_документа", OtherKey="id_документа")]
		public EntitySet<ЖурналОпераций> ЖурналОперацийs
		{
			get
			{
				return this._ЖурналОперацийs;
			}
			set
			{
				this._ЖурналОперацийs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Документы_Резолюция", Storage="_Резолюцияs", ThisKey="id_документа", OtherKey="id_документа")]
		public EntitySet<Резолюция> Резолюцияs
		{
			get
			{
				return this._Резолюцияs;
			}
			set
			{
				this._Резолюцияs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ВидДокумента_Документы", Storage="_ВидДокумента", ThisKey="id_виддокумента", OtherKey="id_видДокумента", IsForeignKey=true)]
		public ВидДокумента ВидДокумента
		{
			get
			{
				return this._ВидДокумента.Entity;
			}
			set
			{
				ВидДокумента previousValue = this._ВидДокумента.Entity;
				if (((previousValue != value) 
							|| (this._ВидДокумента.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ВидДокумента.Entity = null;
						previousValue.Документыs.Remove(this);
					}
					this._ВидДокумента.Entity = value;
					if ((value != null))
					{
						value.Документыs.Add(this);
						this._id_виддокумента = value.id_видДокумента;
					}
					else
					{
						this._id_виддокумента = default(Nullable<int>);
					}
					this.SendPropertyChanged("ВидДокумента");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Грифы_Документы", Storage="_Грифы", ThisKey="id_грифа", OtherKey="id_грифа", IsForeignKey=true)]
		public Грифы Грифы
		{
			get
			{
				return this._Грифы.Entity;
			}
			set
			{
				Грифы previousValue = this._Грифы.Entity;
				if (((previousValue != value) 
							|| (this._Грифы.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Грифы.Entity = null;
						previousValue.Документыs.Remove(this);
					}
					this._Грифы.Entity = value;
					if ((value != null))
					{
						value.Документыs.Add(this);
						this._id_грифа = value.id_грифа;
					}
					else
					{
						this._id_грифа = default(Nullable<byte>);
					}
					this.SendPropertyChanged("Грифы");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Журналы_Документы", Storage="_Журналы", ThisKey="id_журанала", OtherKey="id_журнала", IsForeignKey=true)]
		public Журналы Журналы
		{
			get
			{
				return this._Журналы.Entity;
			}
			set
			{
				Журналы previousValue = this._Журналы.Entity;
				if (((previousValue != value) 
							|| (this._Журналы.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Журналы.Entity = null;
						previousValue.Документыs.Remove(this);
					}
					this._Журналы.Entity = value;
					if ((value != null))
					{
						value.Документыs.Add(this);
						this._id_журанала = value.id_журнала;
					}
					else
					{
						this._id_журанала = default(Nullable<int>);
					}
					this.SendPropertyChanged("Журналы");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="КомуАдресован_Документы", Storage="_КомуАдресован", ThisKey="id_получателя", OtherKey="id_получателя", IsForeignKey=true)]
		public КомуАдресован КомуАдресован
		{
			get
			{
				return this._КомуАдресован.Entity;
			}
			set
			{
				КомуАдресован previousValue = this._КомуАдресован.Entity;
				if (((previousValue != value) 
							|| (this._КомуАдресован.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._КомуАдресован.Entity = null;
						previousValue.Документыs.Remove(this);
					}
					this._КомуАдресован.Entity = value;
					if ((value != null))
					{
						value.Документыs.Add(this);
						this._id_получателя = value.id_получателя;
					}
					else
					{
						this._id_получателя = default(Nullable<int>);
					}
					this.SendPropertyChanged("КомуАдресован");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Подразделения_Документы", Storage="_Подразделения", ThisKey="id_подразделения", OtherKey="id_подразделения", IsForeignKey=true)]
		public Подразделения Подразделения
		{
			get
			{
				return this._Подразделения.Entity;
			}
			set
			{
				Подразделения previousValue = this._Подразделения.Entity;
				if (((previousValue != value) 
							|| (this._Подразделения.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Подразделения.Entity = null;
						previousValue.Документыs.Remove(this);
					}
					this._Подразделения.Entity = value;
					if ((value != null))
					{
						value.Документыs.Add(this);
						this._id_подразделения = value.id_подразделения;
					}
					else
					{
						this._id_подразделения = default(Nullable<int>);
					}
					this.SendPropertyChanged("Подразделения");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Пользователи_Документы", Storage="_Пользователи", ThisKey="id_пользователя", OtherKey="id_пользователя", IsForeignKey=true)]
		public Пользователи Пользователи
		{
			get
			{
				return this._Пользователи.Entity;
			}
			set
			{
				Пользователи previousValue = this._Пользователи.Entity;
				if (((previousValue != value) 
							|| (this._Пользователи.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Пользователи.Entity = null;
						previousValue.Документыs.Remove(this);
					}
					this._Пользователи.Entity = value;
					if ((value != null))
					{
						value.Документыs.Add(this);
						this._id_пользователя = value.id_пользователя;
					}
					else
					{
						this._id_пользователя = default(Nullable<int>);
					}
					this.SendPropertyChanged("Пользователи");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ВидИКраткоеСодержаниеs(ВидИКраткоеСодержание entity)
		{
			this.SendPropertyChanging();
			entity.Документы = this;
		}
		
		private void detach_ВидИКраткоеСодержаниеs(ВидИКраткоеСодержание entity)
		{
			this.SendPropertyChanging();
			entity.Документы = null;
		}
		
		private void attach_ВидимостьДокументаПользователямиs(ВидимостьДокументаПользователями entity)
		{
			this.SendPropertyChanging();
			entity.Документы = this;
		}
		
		private void detach_ВидимостьДокументаПользователямиs(ВидимостьДокументаПользователями entity)
		{
			this.SendPropertyChanging();
			entity.Документы = null;
		}
		
		private void attach_ЖурналОперацийs(ЖурналОпераций entity)
		{
			this.SendPropertyChanging();
			entity.Документы = this;
		}
		
		private void detach_ЖурналОперацийs(ЖурналОпераций entity)
		{
			this.SendPropertyChanging();
			entity.Документы = null;
		}
		
		private void attach_Резолюцияs(Резолюция entity)
		{
			this.SendPropertyChanging();
			entity.Документы = this;
		}
		
		private void detach_Резолюцияs(Резолюция entity)
		{
			this.SendPropertyChanging();
			entity.Документы = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ДокументыРедактора")]
	public partial class ДокументыРедактора : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_документаРедактора;
		
		private int _Код_акта;
		
		private string _Путь;
		
		private int _id_пользователя;
		
		private EntityRef<АктыНаУничтожение> _АктыНаУничтожение;
		
		private EntityRef<Пользователи> _Пользователи;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_документаРедактораChanging(int value);
    partial void Onid_документаРедактораChanged();
    partial void OnКод_актаChanging(int value);
    partial void OnКод_актаChanged();
    partial void OnПутьChanging(string value);
    partial void OnПутьChanged();
    partial void Onid_пользователяChanging(int value);
    partial void Onid_пользователяChanged();
    #endregion
		
		public ДокументыРедактора()
		{
			this._АктыНаУничтожение = default(EntityRef<АктыНаУничтожение>);
			this._Пользователи = default(EntityRef<Пользователи>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_документаРедактора", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_документаРедактора
		{
			get
			{
				return this._id_документаРедактора;
			}
			set
			{
				if ((this._id_документаРедактора != value))
				{
					this.Onid_документаРедактораChanging(value);
					this.SendPropertyChanging();
					this._id_документаРедактора = value;
					this.SendPropertyChanged("id_документаРедактора");
					this.Onid_документаРедактораChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код_акта", DbType="Int NOT NULL")]
		public int Код_акта
		{
			get
			{
				return this._Код_акта;
			}
			set
			{
				if ((this._Код_акта != value))
				{
					if (this._АктыНаУничтожение.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnКод_актаChanging(value);
					this.SendPropertyChanging();
					this._Код_акта = value;
					this.SendPropertyChanged("Код_акта");
					this.OnКод_актаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Путь", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Путь
		{
			get
			{
				return this._Путь;
			}
			set
			{
				if ((this._Путь != value))
				{
					this.OnПутьChanging(value);
					this.SendPropertyChanging();
					this._Путь = value;
					this.SendPropertyChanged("Путь");
					this.OnПутьChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_пользователя", DbType="Int NOT NULL")]
		public int id_пользователя
		{
			get
			{
				return this._id_пользователя;
			}
			set
			{
				if ((this._id_пользователя != value))
				{
					if (this._Пользователи.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_пользователяChanging(value);
					this.SendPropertyChanging();
					this._id_пользователя = value;
					this.SendPropertyChanged("id_пользователя");
					this.Onid_пользователяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="АктыНаУничтожение_ДокументыРедактора", Storage="_АктыНаУничтожение", ThisKey="Код_акта", OtherKey="Код_акта", IsForeignKey=true)]
		public АктыНаУничтожение АктыНаУничтожение
		{
			get
			{
				return this._АктыНаУничтожение.Entity;
			}
			set
			{
				АктыНаУничтожение previousValue = this._АктыНаУничтожение.Entity;
				if (((previousValue != value) 
							|| (this._АктыНаУничтожение.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._АктыНаУничтожение.Entity = null;
						previousValue.ДокументыРедактораs.Remove(this);
					}
					this._АктыНаУничтожение.Entity = value;
					if ((value != null))
					{
						value.ДокументыРедактораs.Add(this);
						this._Код_акта = value.Код_акта;
					}
					else
					{
						this._Код_акта = default(int);
					}
					this.SendPropertyChanged("АктыНаУничтожение");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Пользователи_ДокументыРедактора", Storage="_Пользователи", ThisKey="id_пользователя", OtherKey="id_пользователя", IsForeignKey=true)]
		public Пользователи Пользователи
		{
			get
			{
				return this._Пользователи.Entity;
			}
			set
			{
				Пользователи previousValue = this._Пользователи.Entity;
				if (((previousValue != value) 
							|| (this._Пользователи.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Пользователи.Entity = null;
						previousValue.ДокументыРедактораs.Remove(this);
					}
					this._Пользователи.Entity = value;
					if ((value != null))
					{
						value.ДокументыРедактораs.Add(this);
						this._id_пользователя = value.id_пользователя;
					}
					else
					{
						this._id_пользователя = default(int);
					}
					this.SendPropertyChanged("Пользователи");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ЖурналОпераций")]
	public partial class ЖурналОпераций : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_записи;
		
		private short _id_операции;
		
		private long _id_документа;
		
		private int _id_пользователя;
		
		private string _Комментарий;
		
		private System.DateTime _датаНачалаОперации;
		
		private System.Nullable<System.DateTime> _датаКонцаОперации;
		
		private int _id_исполнителя;
		
		private EntitySet<Резолюция> _Резолюцияs;
		
		private EntityRef<Документы> _Документы;
		
		private EntityRef<Операции> _Операции;
		
		private EntityRef<Пользователи> _Пользователи;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_записиChanging(int value);
    partial void Onid_записиChanged();
    partial void Onid_операцииChanging(short value);
    partial void Onid_операцииChanged();
    partial void Onid_документаChanging(long value);
    partial void Onid_документаChanged();
    partial void Onid_пользователяChanging(int value);
    partial void Onid_пользователяChanged();
    partial void OnКомментарийChanging(string value);
    partial void OnКомментарийChanged();
    partial void OnдатаНачалаОперацииChanging(System.DateTime value);
    partial void OnдатаНачалаОперацииChanged();
    partial void OnдатаКонцаОперацииChanging(System.Nullable<System.DateTime> value);
    partial void OnдатаКонцаОперацииChanged();
    partial void Onid_исполнителяChanging(int value);
    partial void Onid_исполнителяChanged();
    #endregion
		
		public ЖурналОпераций()
		{
			this._Резолюцияs = new EntitySet<Резолюция>(new Action<Резолюция>(this.attach_Резолюцияs), new Action<Резолюция>(this.detach_Резолюцияs));
			this._Документы = default(EntityRef<Документы>);
			this._Операции = default(EntityRef<Операции>);
			this._Пользователи = default(EntityRef<Пользователи>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_записи", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_записи
		{
			get
			{
				return this._id_записи;
			}
			set
			{
				if ((this._id_записи != value))
				{
					this.Onid_записиChanging(value);
					this.SendPropertyChanging();
					this._id_записи = value;
					this.SendPropertyChanged("id_записи");
					this.Onid_записиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_операции", DbType="SmallInt NOT NULL")]
		public short id_операции
		{
			get
			{
				return this._id_операции;
			}
			set
			{
				if ((this._id_операции != value))
				{
					if (this._Операции.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_операцииChanging(value);
					this.SendPropertyChanging();
					this._id_операции = value;
					this.SendPropertyChanged("id_операции");
					this.Onid_операцииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_документа", DbType="BigInt NOT NULL")]
		public long id_документа
		{
			get
			{
				return this._id_документа;
			}
			set
			{
				if ((this._id_документа != value))
				{
					if (this._Документы.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_документаChanging(value);
					this.SendPropertyChanging();
					this._id_документа = value;
					this.SendPropertyChanged("id_документа");
					this.Onid_документаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_пользователя", DbType="Int NOT NULL")]
		public int id_пользователя
		{
			get
			{
				return this._id_пользователя;
			}
			set
			{
				if ((this._id_пользователя != value))
				{
					if (this._Пользователи.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_пользователяChanging(value);
					this.SendPropertyChanging();
					this._id_пользователя = value;
					this.SendPropertyChanged("id_пользователя");
					this.Onid_пользователяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Комментарий", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Комментарий
		{
			get
			{
				return this._Комментарий;
			}
			set
			{
				if ((this._Комментарий != value))
				{
					this.OnКомментарийChanging(value);
					this.SendPropertyChanging();
					this._Комментарий = value;
					this.SendPropertyChanged("Комментарий");
					this.OnКомментарийChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_датаНачалаОперации", DbType="Date NOT NULL")]
		public System.DateTime датаНачалаОперации
		{
			get
			{
				return this._датаНачалаОперации;
			}
			set
			{
				if ((this._датаНачалаОперации != value))
				{
					this.OnдатаНачалаОперацииChanging(value);
					this.SendPropertyChanging();
					this._датаНачалаОперации = value;
					this.SendPropertyChanged("датаНачалаОперации");
					this.OnдатаНачалаОперацииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_датаКонцаОперации", DbType="Date")]
		public System.Nullable<System.DateTime> датаКонцаОперации
		{
			get
			{
				return this._датаКонцаОперации;
			}
			set
			{
				if ((this._датаКонцаОперации != value))
				{
					this.OnдатаКонцаОперацииChanging(value);
					this.SendPropertyChanging();
					this._датаКонцаОперации = value;
					this.SendPropertyChanged("датаКонцаОперации");
					this.OnдатаКонцаОперацииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_исполнителя", DbType="Int NOT NULL")]
		public int id_исполнителя
		{
			get
			{
				return this._id_исполнителя;
			}
			set
			{
				if ((this._id_исполнителя != value))
				{
					this.Onid_исполнителяChanging(value);
					this.SendPropertyChanging();
					this._id_исполнителя = value;
					this.SendPropertyChanged("id_исполнителя");
					this.Onid_исполнителяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ЖурналОпераций_Резолюция", Storage="_Резолюцияs", ThisKey="id_записи", OtherKey="id_записи_операции")]
		public EntitySet<Резолюция> Резолюцияs
		{
			get
			{
				return this._Резолюцияs;
			}
			set
			{
				this._Резолюцияs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Документы_ЖурналОпераций", Storage="_Документы", ThisKey="id_документа", OtherKey="id_документа", IsForeignKey=true)]
		public Документы Документы
		{
			get
			{
				return this._Документы.Entity;
			}
			set
			{
				Документы previousValue = this._Документы.Entity;
				if (((previousValue != value) 
							|| (this._Документы.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Документы.Entity = null;
						previousValue.ЖурналОперацийs.Remove(this);
					}
					this._Документы.Entity = value;
					if ((value != null))
					{
						value.ЖурналОперацийs.Add(this);
						this._id_документа = value.id_документа;
					}
					else
					{
						this._id_документа = default(long);
					}
					this.SendPropertyChanged("Документы");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Операции_ЖурналОпераций", Storage="_Операции", ThisKey="id_операции", OtherKey="id_операции", IsForeignKey=true)]
		public Операции Операции
		{
			get
			{
				return this._Операции.Entity;
			}
			set
			{
				Операции previousValue = this._Операции.Entity;
				if (((previousValue != value) 
							|| (this._Операции.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Операции.Entity = null;
						previousValue.ЖурналОперацийs.Remove(this);
					}
					this._Операции.Entity = value;
					if ((value != null))
					{
						value.ЖурналОперацийs.Add(this);
						this._id_операции = value.id_операции;
					}
					else
					{
						this._id_операции = default(short);
					}
					this.SendPropertyChanged("Операции");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Пользователи_ЖурналОпераций", Storage="_Пользователи", ThisKey="id_пользователя", OtherKey="id_пользователя", IsForeignKey=true)]
		public Пользователи Пользователи
		{
			get
			{
				return this._Пользователи.Entity;
			}
			set
			{
				Пользователи previousValue = this._Пользователи.Entity;
				if (((previousValue != value) 
							|| (this._Пользователи.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Пользователи.Entity = null;
						previousValue.ЖурналОперацийs.Remove(this);
					}
					this._Пользователи.Entity = value;
					if ((value != null))
					{
						value.ЖурналОперацийs.Add(this);
						this._id_пользователя = value.id_пользователя;
					}
					else
					{
						this._id_пользователя = default(int);
					}
					this.SendPropertyChanged("Пользователи");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Резолюцияs(Резолюция entity)
		{
			this.SendPropertyChanging();
			entity.ЖурналОпераций = this;
		}
		
		private void detach_Резолюцияs(Резолюция entity)
		{
			this.SendPropertyChanging();
			entity.ЖурналОпераций = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Журналы")]
	public partial class Журналы : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_журнала;
		
		private string _Наименование;
		
		private System.Nullable<System.DateTime> _Начат;
		
		private System.Nullable<System.DateTime> _Окончен;
		
		private System.Nullable<int> _КоличествоЛистов;
		
		private System.Nullable<int> _ТекущаяСтраница;
		
		private System.Nullable<int> _Тип_Журнала;
		
		private System.Nullable<int> _ТекущийТом;
		
		private System.Nullable<int> _ТекущаяПозиция;
		
		private EntitySet<Документы> _Документыs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_журналаChanging(int value);
    partial void Onid_журналаChanged();
    partial void OnНаименованиеChanging(string value);
    partial void OnНаименованиеChanged();
    partial void OnНачатChanging(System.Nullable<System.DateTime> value);
    partial void OnНачатChanged();
    partial void OnОконченChanging(System.Nullable<System.DateTime> value);
    partial void OnОконченChanged();
    partial void OnКоличествоЛистовChanging(System.Nullable<int> value);
    partial void OnКоличествоЛистовChanged();
    partial void OnТекущаяСтраницаChanging(System.Nullable<int> value);
    partial void OnТекущаяСтраницаChanged();
    partial void OnТип_ЖурналаChanging(System.Nullable<int> value);
    partial void OnТип_ЖурналаChanged();
    partial void OnТекущийТомChanging(System.Nullable<int> value);
    partial void OnТекущийТомChanged();
    partial void OnТекущаяПозицияChanging(System.Nullable<int> value);
    partial void OnТекущаяПозицияChanged();
    #endregion
		
		public Журналы()
		{
			this._Документыs = new EntitySet<Документы>(new Action<Документы>(this.attach_Документыs), new Action<Документы>(this.detach_Документыs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_журнала", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_журнала
		{
			get
			{
				return this._id_журнала;
			}
			set
			{
				if ((this._id_журнала != value))
				{
					this.Onid_журналаChanging(value);
					this.SendPropertyChanging();
					this._id_журнала = value;
					this.SendPropertyChanged("id_журнала");
					this.Onid_журналаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Наименование", DbType="VarChar(50)")]
		public string Наименование
		{
			get
			{
				return this._Наименование;
			}
			set
			{
				if ((this._Наименование != value))
				{
					this.OnНаименованиеChanging(value);
					this.SendPropertyChanging();
					this._Наименование = value;
					this.SendPropertyChanged("Наименование");
					this.OnНаименованиеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Начат", DbType="DateTime")]
		public System.Nullable<System.DateTime> Начат
		{
			get
			{
				return this._Начат;
			}
			set
			{
				if ((this._Начат != value))
				{
					this.OnНачатChanging(value);
					this.SendPropertyChanging();
					this._Начат = value;
					this.SendPropertyChanged("Начат");
					this.OnНачатChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Окончен", DbType="DateTime")]
		public System.Nullable<System.DateTime> Окончен
		{
			get
			{
				return this._Окончен;
			}
			set
			{
				if ((this._Окончен != value))
				{
					this.OnОконченChanging(value);
					this.SendPropertyChanging();
					this._Окончен = value;
					this.SendPropertyChanged("Окончен");
					this.OnОконченChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоЛистов", DbType="Int")]
		public System.Nullable<int> КоличествоЛистов
		{
			get
			{
				return this._КоличествоЛистов;
			}
			set
			{
				if ((this._КоличествоЛистов != value))
				{
					this.OnКоличествоЛистовChanging(value);
					this.SendPropertyChanging();
					this._КоличествоЛистов = value;
					this.SendPropertyChanged("КоличествоЛистов");
					this.OnКоличествоЛистовChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ТекущаяСтраница", DbType="Int")]
		public System.Nullable<int> ТекущаяСтраница
		{
			get
			{
				return this._ТекущаяСтраница;
			}
			set
			{
				if ((this._ТекущаяСтраница != value))
				{
					this.OnТекущаяСтраницаChanging(value);
					this.SendPropertyChanging();
					this._ТекущаяСтраница = value;
					this.SendPropertyChanged("ТекущаяСтраница");
					this.OnТекущаяСтраницаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Тип_Журнала", DbType="Int")]
		public System.Nullable<int> Тип_Журнала
		{
			get
			{
				return this._Тип_Журнала;
			}
			set
			{
				if ((this._Тип_Журнала != value))
				{
					this.OnТип_ЖурналаChanging(value);
					this.SendPropertyChanging();
					this._Тип_Журнала = value;
					this.SendPropertyChanged("Тип_Журнала");
					this.OnТип_ЖурналаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ТекущийТом", DbType="Int")]
		public System.Nullable<int> ТекущийТом
		{
			get
			{
				return this._ТекущийТом;
			}
			set
			{
				if ((this._ТекущийТом != value))
				{
					this.OnТекущийТомChanging(value);
					this.SendPropertyChanging();
					this._ТекущийТом = value;
					this.SendPropertyChanged("ТекущийТом");
					this.OnТекущийТомChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ТекущаяПозиция", DbType="Int")]
		public System.Nullable<int> ТекущаяПозиция
		{
			get
			{
				return this._ТекущаяПозиция;
			}
			set
			{
				if ((this._ТекущаяПозиция != value))
				{
					this.OnТекущаяПозицияChanging(value);
					this.SendPropertyChanging();
					this._ТекущаяПозиция = value;
					this.SendPropertyChanged("ТекущаяПозиция");
					this.OnТекущаяПозицияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Журналы_Документы", Storage="_Документыs", ThisKey="id_журнала", OtherKey="id_журанала")]
		public EntitySet<Документы> Документыs
		{
			get
			{
				return this._Документыs;
			}
			set
			{
				this._Документыs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Документыs(Документы entity)
		{
			this.SendPropertyChanging();
			entity.Журналы = this;
		}
		
		private void detach_Документыs(Документы entity)
		{
			this.SendPropertyChanging();
			entity.Журналы = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ИсполненыеДокументы")]
	public partial class ИсполненыеДокументы : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_записи;
		
		private int _id_исполнителя;
		
		private int _год;
		
		private long _id_документа;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_записиChanging(int value);
    partial void Onid_записиChanged();
    partial void Onid_исполнителяChanging(int value);
    partial void Onid_исполнителяChanged();
    partial void OnгодChanging(int value);
    partial void OnгодChanged();
    partial void Onid_документаChanging(long value);
    partial void Onid_документаChanged();
    #endregion
		
		public ИсполненыеДокументы()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_записи", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_записи
		{
			get
			{
				return this._id_записи;
			}
			set
			{
				if ((this._id_записи != value))
				{
					this.Onid_записиChanging(value);
					this.SendPropertyChanging();
					this._id_записи = value;
					this.SendPropertyChanged("id_записи");
					this.Onid_записиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_исполнителя", DbType="Int NOT NULL")]
		public int id_исполнителя
		{
			get
			{
				return this._id_исполнителя;
			}
			set
			{
				if ((this._id_исполнителя != value))
				{
					this.Onid_исполнителяChanging(value);
					this.SendPropertyChanging();
					this._id_исполнителя = value;
					this.SendPropertyChanged("id_исполнителя");
					this.Onid_исполнителяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_год", DbType="Int NOT NULL")]
		public int год
		{
			get
			{
				return this._год;
			}
			set
			{
				if ((this._год != value))
				{
					this.OnгодChanging(value);
					this.SendPropertyChanging();
					this._год = value;
					this.SendPropertyChanged("год");
					this.OnгодChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_документа", DbType="BigInt NOT NULL")]
		public long id_документа
		{
			get
			{
				return this._id_документа;
			}
			set
			{
				if ((this._id_документа != value))
				{
					this.Onid_документаChanging(value);
					this.SendPropertyChanging();
					this._id_документа = value;
					this.SendPropertyChanged("id_документа");
					this.Onid_документаChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Исполнители")]
	public partial class Исполнители : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_исполнителя;
		
		private string _Исполнитель;
		
		private System.Nullable<bool> _Удален;
		
		private System.Nullable<int> _id_подразделения;
		
		private EntitySet<ВидимостьДокументаПользователями> _ВидимостьДокументаПользователямиs;
		
		private EntitySet<КомуАдресован> _КомуАдресованs;
		
		private EntityRef<ПодразделенияИсполнителей> _ПодразделенияИсполнителей;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_исполнителяChanging(int value);
    partial void Onid_исполнителяChanged();
    partial void OnИсполнительChanging(string value);
    partial void OnИсполнительChanged();
    partial void OnУдаленChanging(System.Nullable<bool> value);
    partial void OnУдаленChanged();
    partial void Onid_подразделенияChanging(System.Nullable<int> value);
    partial void Onid_подразделенияChanged();
    #endregion
		
		public Исполнители()
		{
			this._ВидимостьДокументаПользователямиs = new EntitySet<ВидимостьДокументаПользователями>(new Action<ВидимостьДокументаПользователями>(this.attach_ВидимостьДокументаПользователямиs), new Action<ВидимостьДокументаПользователями>(this.detach_ВидимостьДокументаПользователямиs));
			this._КомуАдресованs = new EntitySet<КомуАдресован>(new Action<КомуАдресован>(this.attach_КомуАдресованs), new Action<КомуАдресован>(this.detach_КомуАдресованs));
			this._ПодразделенияИсполнителей = default(EntityRef<ПодразделенияИсполнителей>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_исполнителя", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_исполнителя
		{
			get
			{
				return this._id_исполнителя;
			}
			set
			{
				if ((this._id_исполнителя != value))
				{
					this.Onid_исполнителяChanging(value);
					this.SendPropertyChanging();
					this._id_исполнителя = value;
					this.SendPropertyChanged("id_исполнителя");
					this.Onid_исполнителяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Исполнитель", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Исполнитель
		{
			get
			{
				return this._Исполнитель;
			}
			set
			{
				if ((this._Исполнитель != value))
				{
					this.OnИсполнительChanging(value);
					this.SendPropertyChanging();
					this._Исполнитель = value;
					this.SendPropertyChanged("Исполнитель");
					this.OnИсполнительChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Удален", DbType="Bit")]
		public System.Nullable<bool> Удален
		{
			get
			{
				return this._Удален;
			}
			set
			{
				if ((this._Удален != value))
				{
					this.OnУдаленChanging(value);
					this.SendPropertyChanging();
					this._Удален = value;
					this.SendPropertyChanged("Удален");
					this.OnУдаленChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_подразделения", DbType="Int")]
		public System.Nullable<int> id_подразделения
		{
			get
			{
				return this._id_подразделения;
			}
			set
			{
				if ((this._id_подразделения != value))
				{
					if (this._ПодразделенияИсполнителей.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_подразделенияChanging(value);
					this.SendPropertyChanging();
					this._id_подразделения = value;
					this.SendPropertyChanged("id_подразделения");
					this.Onid_подразделенияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Исполнители_ВидимостьДокументаПользователями", Storage="_ВидимостьДокументаПользователямиs", ThisKey="id_исполнителя", OtherKey="id_исполнителя")]
		public EntitySet<ВидимостьДокументаПользователями> ВидимостьДокументаПользователямиs
		{
			get
			{
				return this._ВидимостьДокументаПользователямиs;
			}
			set
			{
				this._ВидимостьДокументаПользователямиs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Исполнители_КомуАдресован", Storage="_КомуАдресованs", ThisKey="id_исполнителя", OtherKey="id_исполнителя")]
		public EntitySet<КомуАдресован> КомуАдресованs
		{
			get
			{
				return this._КомуАдресованs;
			}
			set
			{
				this._КомуАдресованs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ПодразделенияИсполнителей_Исполнители", Storage="_ПодразделенияИсполнителей", ThisKey="id_подразделения", OtherKey="id_подразделения", IsForeignKey=true)]
		public ПодразделенияИсполнителей ПодразделенияИсполнителей
		{
			get
			{
				return this._ПодразделенияИсполнителей.Entity;
			}
			set
			{
				ПодразделенияИсполнителей previousValue = this._ПодразделенияИсполнителей.Entity;
				if (((previousValue != value) 
							|| (this._ПодразделенияИсполнителей.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ПодразделенияИсполнителей.Entity = null;
						previousValue.Исполнителиs.Remove(this);
					}
					this._ПодразделенияИсполнителей.Entity = value;
					if ((value != null))
					{
						value.Исполнителиs.Add(this);
						this._id_подразделения = value.id_подразделения;
					}
					else
					{
						this._id_подразделения = default(Nullable<int>);
					}
					this.SendPropertyChanged("ПодразделенияИсполнителей");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ВидимостьДокументаПользователямиs(ВидимостьДокументаПользователями entity)
		{
			this.SendPropertyChanging();
			entity.Исполнители = this;
		}
		
		private void detach_ВидимостьДокументаПользователямиs(ВидимостьДокументаПользователями entity)
		{
			this.SendPropertyChanging();
			entity.Исполнители = null;
		}
		
		private void attach_КомуАдресованs(КомуАдресован entity)
		{
			this.SendPropertyChanging();
			entity.Исполнители = this;
		}
		
		private void detach_КомуАдресованs(КомуАдресован entity)
		{
			this.SendPropertyChanging();
			entity.Исполнители = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.КомуАдресован")]
	public partial class КомуАдресован : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_получателя;
		
		private string _КомуАдресован1;
		
		private System.Nullable<int> _id_исполнителя;
		
		private System.Nullable<bool> _Удален;
		
		private EntitySet<Документы> _Документыs;
		
		private EntityRef<Исполнители> _Исполнители;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_получателяChanging(int value);
    partial void Onid_получателяChanged();
    partial void OnКомуАдресован1Changing(string value);
    partial void OnКомуАдресован1Changed();
    partial void Onid_исполнителяChanging(System.Nullable<int> value);
    partial void Onid_исполнителяChanged();
    partial void OnУдаленChanging(System.Nullable<bool> value);
    partial void OnУдаленChanged();
    #endregion
		
		public КомуАдресован()
		{
			this._Документыs = new EntitySet<Документы>(new Action<Документы>(this.attach_Документыs), new Action<Документы>(this.detach_Документыs));
			this._Исполнители = default(EntityRef<Исполнители>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_получателя", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_получателя
		{
			get
			{
				return this._id_получателя;
			}
			set
			{
				if ((this._id_получателя != value))
				{
					this.Onid_получателяChanging(value);
					this.SendPropertyChanging();
					this._id_получателя = value;
					this.SendPropertyChanged("id_получателя");
					this.Onid_получателяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="КомуАдресован", Storage="_КомуАдресован1", DbType="VarChar(128)")]
		public string КомуАдресован1
		{
			get
			{
				return this._КомуАдресован1;
			}
			set
			{
				if ((this._КомуАдресован1 != value))
				{
					this.OnКомуАдресован1Changing(value);
					this.SendPropertyChanging();
					this._КомуАдресован1 = value;
					this.SendPropertyChanged("КомуАдресован1");
					this.OnКомуАдресован1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_исполнителя", DbType="Int")]
		public System.Nullable<int> id_исполнителя
		{
			get
			{
				return this._id_исполнителя;
			}
			set
			{
				if ((this._id_исполнителя != value))
				{
					if (this._Исполнители.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_исполнителяChanging(value);
					this.SendPropertyChanging();
					this._id_исполнителя = value;
					this.SendPropertyChanged("id_исполнителя");
					this.Onid_исполнителяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Удален", DbType="Bit")]
		public System.Nullable<bool> Удален
		{
			get
			{
				return this._Удален;
			}
			set
			{
				if ((this._Удален != value))
				{
					this.OnУдаленChanging(value);
					this.SendPropertyChanging();
					this._Удален = value;
					this.SendPropertyChanged("Удален");
					this.OnУдаленChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="КомуАдресован_Документы", Storage="_Документыs", ThisKey="id_получателя", OtherKey="id_получателя")]
		public EntitySet<Документы> Документыs
		{
			get
			{
				return this._Документыs;
			}
			set
			{
				this._Документыs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Исполнители_КомуАдресован", Storage="_Исполнители", ThisKey="id_исполнителя", OtherKey="id_исполнителя", IsForeignKey=true)]
		public Исполнители Исполнители
		{
			get
			{
				return this._Исполнители.Entity;
			}
			set
			{
				Исполнители previousValue = this._Исполнители.Entity;
				if (((previousValue != value) 
							|| (this._Исполнители.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Исполнители.Entity = null;
						previousValue.КомуАдресованs.Remove(this);
					}
					this._Исполнители.Entity = value;
					if ((value != null))
					{
						value.КомуАдресованs.Add(this);
						this._id_исполнителя = value.id_исполнителя;
					}
					else
					{
						this._id_исполнителя = default(Nullable<int>);
					}
					this.SendPropertyChanged("Исполнители");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Документыs(Документы entity)
		{
			this.SendPropertyChanging();
			entity.КомуАдресован = this;
		}
		
		private void detach_Документыs(Документы entity)
		{
			this.SendPropertyChanging();
			entity.КомуАдресован = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Операции")]
	public partial class Операции : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_операции;
		
		private string _НаименованиеОперации;
		
		private EntitySet<ЖурналОпераций> _ЖурналОперацийs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_операцииChanging(short value);
    partial void Onid_операцииChanged();
    partial void OnНаименованиеОперацииChanging(string value);
    partial void OnНаименованиеОперацииChanged();
    #endregion
		
		public Операции()
		{
			this._ЖурналОперацийs = new EntitySet<ЖурналОпераций>(new Action<ЖурналОпераций>(this.attach_ЖурналОперацийs), new Action<ЖурналОпераций>(this.detach_ЖурналОперацийs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_операции", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_операции
		{
			get
			{
				return this._id_операции;
			}
			set
			{
				if ((this._id_операции != value))
				{
					this.Onid_операцииChanging(value);
					this.SendPropertyChanging();
					this._id_операции = value;
					this.SendPropertyChanged("id_операции");
					this.Onid_операцииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НаименованиеОперации", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string НаименованиеОперации
		{
			get
			{
				return this._НаименованиеОперации;
			}
			set
			{
				if ((this._НаименованиеОперации != value))
				{
					this.OnНаименованиеОперацииChanging(value);
					this.SendPropertyChanging();
					this._НаименованиеОперации = value;
					this.SendPropertyChanged("НаименованиеОперации");
					this.OnНаименованиеОперацииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Операции_ЖурналОпераций", Storage="_ЖурналОперацийs", ThisKey="id_операции", OtherKey="id_операции")]
		public EntitySet<ЖурналОпераций> ЖурналОперацийs
		{
			get
			{
				return this._ЖурналОперацийs;
			}
			set
			{
				this._ЖурналОперацийs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ЖурналОперацийs(ЖурналОпераций entity)
		{
			this.SendPropertyChanging();
			entity.Операции = this;
		}
		
		private void detach_ЖурналОперацийs(ЖурналОпераций entity)
		{
			this.SendPropertyChanging();
			entity.Операции = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Подразделения")]
	public partial class Подразделения : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_подразделения;
		
		private string _НазваниеПодразделения;
		
		private string _Индекс;
		
		private string _Префикс;
		
		private System.Nullable<bool> _Удален;
		
		private EntitySet<Документы> _Документыs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_подразделенияChanging(int value);
    partial void Onid_подразделенияChanged();
    partial void OnНазваниеПодразделенияChanging(string value);
    partial void OnНазваниеПодразделенияChanged();
    partial void OnИндексChanging(string value);
    partial void OnИндексChanged();
    partial void OnПрефиксChanging(string value);
    partial void OnПрефиксChanged();
    partial void OnУдаленChanging(System.Nullable<bool> value);
    partial void OnУдаленChanged();
    #endregion
		
		public Подразделения()
		{
			this._Документыs = new EntitySet<Документы>(new Action<Документы>(this.attach_Документыs), new Action<Документы>(this.detach_Документыs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_подразделения", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_подразделения
		{
			get
			{
				return this._id_подразделения;
			}
			set
			{
				if ((this._id_подразделения != value))
				{
					this.Onid_подразделенияChanging(value);
					this.SendPropertyChanging();
					this._id_подразделения = value;
					this.SendPropertyChanged("id_подразделения");
					this.Onid_подразделенияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазваниеПодразделения", DbType="VarChar(256)")]
		public string НазваниеПодразделения
		{
			get
			{
				return this._НазваниеПодразделения;
			}
			set
			{
				if ((this._НазваниеПодразделения != value))
				{
					this.OnНазваниеПодразделенияChanging(value);
					this.SendPropertyChanging();
					this._НазваниеПодразделения = value;
					this.SendPropertyChanged("НазваниеПодразделения");
					this.OnНазваниеПодразделенияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Индекс", DbType="VarChar(50)")]
		public string Индекс
		{
			get
			{
				return this._Индекс;
			}
			set
			{
				if ((this._Индекс != value))
				{
					this.OnИндексChanging(value);
					this.SendPropertyChanging();
					this._Индекс = value;
					this.SendPropertyChanged("Индекс");
					this.OnИндексChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Префикс", DbType="VarChar(128)")]
		public string Префикс
		{
			get
			{
				return this._Префикс;
			}
			set
			{
				if ((this._Префикс != value))
				{
					this.OnПрефиксChanging(value);
					this.SendPropertyChanging();
					this._Префикс = value;
					this.SendPropertyChanged("Префикс");
					this.OnПрефиксChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Удален", DbType="Bit")]
		public System.Nullable<bool> Удален
		{
			get
			{
				return this._Удален;
			}
			set
			{
				if ((this._Удален != value))
				{
					this.OnУдаленChanging(value);
					this.SendPropertyChanging();
					this._Удален = value;
					this.SendPropertyChanged("Удален");
					this.OnУдаленChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Подразделения_Документы", Storage="_Документыs", ThisKey="id_подразделения", OtherKey="id_подразделения")]
		public EntitySet<Документы> Документыs
		{
			get
			{
				return this._Документыs;
			}
			set
			{
				this._Документыs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Документыs(Документы entity)
		{
			this.SendPropertyChanging();
			entity.Подразделения = this;
		}
		
		private void detach_Документыs(Документы entity)
		{
			this.SendPropertyChanging();
			entity.Подразделения = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ПодразделенияИсполнителей")]
	public partial class ПодразделенияИсполнителей : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_подразделения;
		
		private string _НазваниепПодразделения;
		
		private EntitySet<ВидимостьПольномочийПользователя> _ВидимостьПольномочийПользователяs;
		
		private EntitySet<Исполнители> _Исполнителиs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_подразделенияChanging(int value);
    partial void Onid_подразделенияChanged();
    partial void OnНазваниепПодразделенияChanging(string value);
    partial void OnНазваниепПодразделенияChanged();
    #endregion
		
		public ПодразделенияИсполнителей()
		{
			this._ВидимостьПольномочийПользователяs = new EntitySet<ВидимостьПольномочийПользователя>(new Action<ВидимостьПольномочийПользователя>(this.attach_ВидимостьПольномочийПользователяs), new Action<ВидимостьПольномочийПользователя>(this.detach_ВидимостьПольномочийПользователяs));
			this._Исполнителиs = new EntitySet<Исполнители>(new Action<Исполнители>(this.attach_Исполнителиs), new Action<Исполнители>(this.detach_Исполнителиs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_подразделения", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_подразделения
		{
			get
			{
				return this._id_подразделения;
			}
			set
			{
				if ((this._id_подразделения != value))
				{
					this.Onid_подразделенияChanging(value);
					this.SendPropertyChanging();
					this._id_подразделения = value;
					this.SendPropertyChanged("id_подразделения");
					this.Onid_подразделенияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазваниепПодразделения", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string НазваниепПодразделения
		{
			get
			{
				return this._НазваниепПодразделения;
			}
			set
			{
				if ((this._НазваниепПодразделения != value))
				{
					this.OnНазваниепПодразделенияChanging(value);
					this.SendPropertyChanging();
					this._НазваниепПодразделения = value;
					this.SendPropertyChanged("НазваниепПодразделения");
					this.OnНазваниепПодразделенияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ПодразделенияИсполнителей_ВидимостьПольномочийПользователя", Storage="_ВидимостьПольномочийПользователяs", ThisKey="id_подразделения", OtherKey="id_подразделения")]
		public EntitySet<ВидимостьПольномочийПользователя> ВидимостьПольномочийПользователяs
		{
			get
			{
				return this._ВидимостьПольномочийПользователяs;
			}
			set
			{
				this._ВидимостьПольномочийПользователяs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ПодразделенияИсполнителей_Исполнители", Storage="_Исполнителиs", ThisKey="id_подразделения", OtherKey="id_подразделения")]
		public EntitySet<Исполнители> Исполнителиs
		{
			get
			{
				return this._Исполнителиs;
			}
			set
			{
				this._Исполнителиs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ВидимостьПольномочийПользователяs(ВидимостьПольномочийПользователя entity)
		{
			this.SendPropertyChanging();
			entity.ПодразделенияИсполнителей = this;
		}
		
		private void detach_ВидимостьПольномочийПользователяs(ВидимостьПольномочийПользователя entity)
		{
			this.SendPropertyChanging();
			entity.ПодразделенияИсполнителей = null;
		}
		
		private void attach_Исполнителиs(Исполнители entity)
		{
			this.SendPropertyChanging();
			entity.ПодразделенияИсполнителей = this;
		}
		
		private void detach_Исполнителиs(Исполнители entity)
		{
			this.SendPropertyChanging();
			entity.ПодразделенияИсполнителей = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Пользователи")]
	public partial class Пользователи : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_пользователя;
		
		private string _Логин;
		
		private string _ИмяВСистеме;
		
		private string _Фамилия;
		
		private string _Имя;
		
		private string _Отчество;
		
		private string _Пароль;
		
		private string _Должность;
		
		private string _Звание;
		
		private System.Nullable<short> _id_роли;
		
		private System.Nullable<int> _id_исполнителя;
		
		private EntitySet<ВидимостьПольномочийПользователя> _ВидимостьПольномочийПользователяs;
		
		private EntitySet<Документы> _Документыs;
		
		private EntitySet<ДокументыРедактора> _ДокументыРедактораs;
		
		private EntitySet<ЖурналОпераций> _ЖурналОперацийs;
		
		private EntityRef<Пользователи> _Пользователи2;
		
		private EntitySet<РазмерыГрида> _РазмерыГридаs;
		
		private EntityRef<Пользователи> _Пользователи1;
		
		private EntityRef<РолиПолномочийПользователей> _РолиПолномочийПользователей;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_пользователяChanging(int value);
    partial void Onid_пользователяChanged();
    partial void OnЛогинChanging(string value);
    partial void OnЛогинChanged();
    partial void OnИмяВСистемеChanging(string value);
    partial void OnИмяВСистемеChanged();
    partial void OnФамилияChanging(string value);
    partial void OnФамилияChanged();
    partial void OnИмяChanging(string value);
    partial void OnИмяChanged();
    partial void OnОтчествоChanging(string value);
    partial void OnОтчествоChanged();
    partial void OnПарольChanging(string value);
    partial void OnПарольChanged();
    partial void OnДолжностьChanging(string value);
    partial void OnДолжностьChanged();
    partial void OnЗваниеChanging(string value);
    partial void OnЗваниеChanged();
    partial void Onid_ролиChanging(System.Nullable<short> value);
    partial void Onid_ролиChanged();
    partial void Onid_исполнителяChanging(System.Nullable<int> value);
    partial void Onid_исполнителяChanged();
    #endregion
		
		public Пользователи()
		{
			this._ВидимостьПольномочийПользователяs = new EntitySet<ВидимостьПольномочийПользователя>(new Action<ВидимостьПольномочийПользователя>(this.attach_ВидимостьПольномочийПользователяs), new Action<ВидимостьПольномочийПользователя>(this.detach_ВидимостьПольномочийПользователяs));
			this._Документыs = new EntitySet<Документы>(new Action<Документы>(this.attach_Документыs), new Action<Документы>(this.detach_Документыs));
			this._ДокументыРедактораs = new EntitySet<ДокументыРедактора>(new Action<ДокументыРедактора>(this.attach_ДокументыРедактораs), new Action<ДокументыРедактора>(this.detach_ДокументыРедактораs));
			this._ЖурналОперацийs = new EntitySet<ЖурналОпераций>(new Action<ЖурналОпераций>(this.attach_ЖурналОперацийs), new Action<ЖурналОпераций>(this.detach_ЖурналОперацийs));
			this._Пользователи2 = default(EntityRef<Пользователи>);
			this._РазмерыГридаs = new EntitySet<РазмерыГрида>(new Action<РазмерыГрида>(this.attach_РазмерыГридаs), new Action<РазмерыГрида>(this.detach_РазмерыГридаs));
			this._Пользователи1 = default(EntityRef<Пользователи>);
			this._РолиПолномочийПользователей = default(EntityRef<РолиПолномочийПользователей>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_пользователя", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_пользователя
		{
			get
			{
				return this._id_пользователя;
			}
			set
			{
				if ((this._id_пользователя != value))
				{
					if (this._Пользователи1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_пользователяChanging(value);
					this.SendPropertyChanging();
					this._id_пользователя = value;
					this.SendPropertyChanged("id_пользователя");
					this.Onid_пользователяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Логин", DbType="VarChar(50)")]
		public string Логин
		{
			get
			{
				return this._Логин;
			}
			set
			{
				if ((this._Логин != value))
				{
					this.OnЛогинChanging(value);
					this.SendPropertyChanging();
					this._Логин = value;
					this.SendPropertyChanged("Логин");
					this.OnЛогинChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИмяВСистеме", DbType="VarChar(50)")]
		public string ИмяВСистеме
		{
			get
			{
				return this._ИмяВСистеме;
			}
			set
			{
				if ((this._ИмяВСистеме != value))
				{
					this.OnИмяВСистемеChanging(value);
					this.SendPropertyChanging();
					this._ИмяВСистеме = value;
					this.SendPropertyChanged("ИмяВСистеме");
					this.OnИмяВСистемеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Фамилия", DbType="VarChar(50)")]
		public string Фамилия
		{
			get
			{
				return this._Фамилия;
			}
			set
			{
				if ((this._Фамилия != value))
				{
					this.OnФамилияChanging(value);
					this.SendPropertyChanging();
					this._Фамилия = value;
					this.SendPropertyChanged("Фамилия");
					this.OnФамилияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Имя", DbType="VarChar(50)")]
		public string Имя
		{
			get
			{
				return this._Имя;
			}
			set
			{
				if ((this._Имя != value))
				{
					this.OnИмяChanging(value);
					this.SendPropertyChanging();
					this._Имя = value;
					this.SendPropertyChanged("Имя");
					this.OnИмяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Отчество", DbType="VarChar(50)")]
		public string Отчество
		{
			get
			{
				return this._Отчество;
			}
			set
			{
				if ((this._Отчество != value))
				{
					this.OnОтчествоChanging(value);
					this.SendPropertyChanging();
					this._Отчество = value;
					this.SendPropertyChanged("Отчество");
					this.OnОтчествоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Пароль", DbType="VarChar(50)")]
		public string Пароль
		{
			get
			{
				return this._Пароль;
			}
			set
			{
				if ((this._Пароль != value))
				{
					this.OnПарольChanging(value);
					this.SendPropertyChanging();
					this._Пароль = value;
					this.SendPropertyChanged("Пароль");
					this.OnПарольChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Должность", DbType="VarChar(50)")]
		public string Должность
		{
			get
			{
				return this._Должность;
			}
			set
			{
				if ((this._Должность != value))
				{
					this.OnДолжностьChanging(value);
					this.SendPropertyChanging();
					this._Должность = value;
					this.SendPropertyChanged("Должность");
					this.OnДолжностьChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Звание", DbType="VarChar(50)")]
		public string Звание
		{
			get
			{
				return this._Звание;
			}
			set
			{
				if ((this._Звание != value))
				{
					this.OnЗваниеChanging(value);
					this.SendPropertyChanging();
					this._Звание = value;
					this.SendPropertyChanged("Звание");
					this.OnЗваниеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_роли", DbType="SmallInt")]
		public System.Nullable<short> id_роли
		{
			get
			{
				return this._id_роли;
			}
			set
			{
				if ((this._id_роли != value))
				{
					if (this._РолиПолномочийПользователей.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ролиChanging(value);
					this.SendPropertyChanging();
					this._id_роли = value;
					this.SendPropertyChanged("id_роли");
					this.Onid_ролиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_исполнителя", DbType="Int")]
		public System.Nullable<int> id_исполнителя
		{
			get
			{
				return this._id_исполнителя;
			}
			set
			{
				if ((this._id_исполнителя != value))
				{
					this.Onid_исполнителяChanging(value);
					this.SendPropertyChanging();
					this._id_исполнителя = value;
					this.SendPropertyChanged("id_исполнителя");
					this.Onid_исполнителяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Пользователи_ВидимостьПольномочийПользователя", Storage="_ВидимостьПольномочийПользователяs", ThisKey="id_пользователя", OtherKey="id_пользователя")]
		public EntitySet<ВидимостьПольномочийПользователя> ВидимостьПольномочийПользователяs
		{
			get
			{
				return this._ВидимостьПольномочийПользователяs;
			}
			set
			{
				this._ВидимостьПольномочийПользователяs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Пользователи_Документы", Storage="_Документыs", ThisKey="id_пользователя", OtherKey="id_пользователя")]
		public EntitySet<Документы> Документыs
		{
			get
			{
				return this._Документыs;
			}
			set
			{
				this._Документыs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Пользователи_ДокументыРедактора", Storage="_ДокументыРедактораs", ThisKey="id_пользователя", OtherKey="id_пользователя")]
		public EntitySet<ДокументыРедактора> ДокументыРедактораs
		{
			get
			{
				return this._ДокументыРедактораs;
			}
			set
			{
				this._ДокументыРедактораs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Пользователи_ЖурналОпераций", Storage="_ЖурналОперацийs", ThisKey="id_пользователя", OtherKey="id_пользователя")]
		public EntitySet<ЖурналОпераций> ЖурналОперацийs
		{
			get
			{
				return this._ЖурналОперацийs;
			}
			set
			{
				this._ЖурналОперацийs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Пользователи_Пользователи", Storage="_Пользователи2", ThisKey="id_пользователя", OtherKey="id_пользователя", IsUnique=true, IsForeignKey=false)]
		public Пользователи Пользователи2
		{
			get
			{
				return this._Пользователи2.Entity;
			}
			set
			{
				Пользователи previousValue = this._Пользователи2.Entity;
				if (((previousValue != value) 
							|| (this._Пользователи2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Пользователи2.Entity = null;
						previousValue.Пользователи1 = null;
					}
					this._Пользователи2.Entity = value;
					if ((value != null))
					{
						value.Пользователи1 = this;
					}
					this.SendPropertyChanged("Пользователи2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Пользователи_РазмерыГрида", Storage="_РазмерыГридаs", ThisKey="id_пользователя", OtherKey="id_пользователя")]
		public EntitySet<РазмерыГрида> РазмерыГридаs
		{
			get
			{
				return this._РазмерыГридаs;
			}
			set
			{
				this._РазмерыГридаs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Пользователи_Пользователи", Storage="_Пользователи1", ThisKey="id_пользователя", OtherKey="id_пользователя", IsForeignKey=true)]
		public Пользователи Пользователи1
		{
			get
			{
				return this._Пользователи1.Entity;
			}
			set
			{
				Пользователи previousValue = this._Пользователи1.Entity;
				if (((previousValue != value) 
							|| (this._Пользователи1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Пользователи1.Entity = null;
						previousValue.Пользователи2 = null;
					}
					this._Пользователи1.Entity = value;
					if ((value != null))
					{
						value.Пользователи2 = this;
						this._id_пользователя = value.id_пользователя;
					}
					else
					{
						this._id_пользователя = default(int);
					}
					this.SendPropertyChanged("Пользователи1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="РолиПолномочийПользователей_Пользователи", Storage="_РолиПолномочийПользователей", ThisKey="id_роли", OtherKey="id_роли", IsForeignKey=true)]
		public РолиПолномочийПользователей РолиПолномочийПользователей
		{
			get
			{
				return this._РолиПолномочийПользователей.Entity;
			}
			set
			{
				РолиПолномочийПользователей previousValue = this._РолиПолномочийПользователей.Entity;
				if (((previousValue != value) 
							|| (this._РолиПолномочийПользователей.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._РолиПолномочийПользователей.Entity = null;
						previousValue.Пользователиs.Remove(this);
					}
					this._РолиПолномочийПользователей.Entity = value;
					if ((value != null))
					{
						value.Пользователиs.Add(this);
						this._id_роли = value.id_роли;
					}
					else
					{
						this._id_роли = default(Nullable<short>);
					}
					this.SendPropertyChanged("РолиПолномочийПользователей");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ВидимостьПольномочийПользователяs(ВидимостьПольномочийПользователя entity)
		{
			this.SendPropertyChanging();
			entity.Пользователи = this;
		}
		
		private void detach_ВидимостьПольномочийПользователяs(ВидимостьПольномочийПользователя entity)
		{
			this.SendPropertyChanging();
			entity.Пользователи = null;
		}
		
		private void attach_Документыs(Документы entity)
		{
			this.SendPropertyChanging();
			entity.Пользователи = this;
		}
		
		private void detach_Документыs(Документы entity)
		{
			this.SendPropertyChanging();
			entity.Пользователи = null;
		}
		
		private void attach_ДокументыРедактораs(ДокументыРедактора entity)
		{
			this.SendPropertyChanging();
			entity.Пользователи = this;
		}
		
		private void detach_ДокументыРедактораs(ДокументыРедактора entity)
		{
			this.SendPropertyChanging();
			entity.Пользователи = null;
		}
		
		private void attach_ЖурналОперацийs(ЖурналОпераций entity)
		{
			this.SendPropertyChanging();
			entity.Пользователи = this;
		}
		
		private void detach_ЖурналОперацийs(ЖурналОпераций entity)
		{
			this.SendPropertyChanging();
			entity.Пользователи = null;
		}
		
		private void attach_РазмерыГридаs(РазмерыГрида entity)
		{
			this.SendPropertyChanging();
			entity.Пользователи = this;
		}
		
		private void detach_РазмерыГридаs(РазмерыГрида entity)
		{
			this.SendPropertyChanging();
			entity.Пользователи = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.РазмерыГрида")]
	public partial class РазмерыГрида : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_записи;
		
		private int _id_пользователя;
		
		private string _название_грида;
		
		private string _название_колонки;
		
		private int _ширина_колонки;
		
		private EntityRef<Пользователи> _Пользователи;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_записиChanging(int value);
    partial void Onid_записиChanged();
    partial void Onid_пользователяChanging(int value);
    partial void Onid_пользователяChanged();
    partial void Onназвание_гридаChanging(string value);
    partial void Onназвание_гридаChanged();
    partial void Onназвание_колонкиChanging(string value);
    partial void Onназвание_колонкиChanged();
    partial void Onширина_колонкиChanging(int value);
    partial void Onширина_колонкиChanged();
    #endregion
		
		public РазмерыГрида()
		{
			this._Пользователи = default(EntityRef<Пользователи>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_записи", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_записи
		{
			get
			{
				return this._id_записи;
			}
			set
			{
				if ((this._id_записи != value))
				{
					this.Onid_записиChanging(value);
					this.SendPropertyChanging();
					this._id_записи = value;
					this.SendPropertyChanged("id_записи");
					this.Onid_записиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_пользователя", DbType="Int NOT NULL")]
		public int id_пользователя
		{
			get
			{
				return this._id_пользователя;
			}
			set
			{
				if ((this._id_пользователя != value))
				{
					if (this._Пользователи.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_пользователяChanging(value);
					this.SendPropertyChanging();
					this._id_пользователя = value;
					this.SendPropertyChanged("id_пользователя");
					this.Onid_пользователяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_название_грида", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string название_грида
		{
			get
			{
				return this._название_грида;
			}
			set
			{
				if ((this._название_грида != value))
				{
					this.Onназвание_гридаChanging(value);
					this.SendPropertyChanging();
					this._название_грида = value;
					this.SendPropertyChanged("название_грида");
					this.Onназвание_гридаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_название_колонки", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string название_колонки
		{
			get
			{
				return this._название_колонки;
			}
			set
			{
				if ((this._название_колонки != value))
				{
					this.Onназвание_колонкиChanging(value);
					this.SendPropertyChanging();
					this._название_колонки = value;
					this.SendPropertyChanged("название_колонки");
					this.Onназвание_колонкиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ширина_колонки", DbType="Int NOT NULL")]
		public int ширина_колонки
		{
			get
			{
				return this._ширина_колонки;
			}
			set
			{
				if ((this._ширина_колонки != value))
				{
					this.Onширина_колонкиChanging(value);
					this.SendPropertyChanging();
					this._ширина_колонки = value;
					this.SendPropertyChanged("ширина_колонки");
					this.Onширина_колонкиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Пользователи_РазмерыГрида", Storage="_Пользователи", ThisKey="id_пользователя", OtherKey="id_пользователя", IsForeignKey=true)]
		public Пользователи Пользователи
		{
			get
			{
				return this._Пользователи.Entity;
			}
			set
			{
				Пользователи previousValue = this._Пользователи.Entity;
				if (((previousValue != value) 
							|| (this._Пользователи.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Пользователи.Entity = null;
						previousValue.РазмерыГридаs.Remove(this);
					}
					this._Пользователи.Entity = value;
					if ((value != null))
					{
						value.РазмерыГридаs.Add(this);
						this._id_пользователя = value.id_пользователя;
					}
					else
					{
						this._id_пользователя = default(int);
					}
					this.SendPropertyChanged("Пользователи");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Резолюция")]
	public partial class Резолюция : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_записи;
		
		private long _id_документа;
		
		private int _НомерСтроки;
		
		private string _Текст;
		
		private bool _ПризнакПечати;
		
		private System.Nullable<int> _id_записи_операции;
		
		private EntityRef<Документы> _Документы;
		
		private EntityRef<ЖурналОпераций> _ЖурналОпераций;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_записиChanging(long value);
    partial void Onid_записиChanged();
    partial void Onid_документаChanging(long value);
    partial void Onid_документаChanged();
    partial void OnНомерСтрокиChanging(int value);
    partial void OnНомерСтрокиChanged();
    partial void OnТекстChanging(string value);
    partial void OnТекстChanged();
    partial void OnПризнакПечатиChanging(bool value);
    partial void OnПризнакПечатиChanged();
    partial void Onid_записи_операцииChanging(System.Nullable<int> value);
    partial void Onid_записи_операцииChanged();
    #endregion
		
		public Резолюция()
		{
			this._Документы = default(EntityRef<Документы>);
			this._ЖурналОпераций = default(EntityRef<ЖурналОпераций>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_записи", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_записи
		{
			get
			{
				return this._id_записи;
			}
			set
			{
				if ((this._id_записи != value))
				{
					this.Onid_записиChanging(value);
					this.SendPropertyChanging();
					this._id_записи = value;
					this.SendPropertyChanged("id_записи");
					this.Onid_записиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_документа", DbType="BigInt NOT NULL")]
		public long id_документа
		{
			get
			{
				return this._id_документа;
			}
			set
			{
				if ((this._id_документа != value))
				{
					if (this._Документы.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_документаChanging(value);
					this.SendPropertyChanging();
					this._id_документа = value;
					this.SendPropertyChanged("id_документа");
					this.Onid_документаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомерСтроки", DbType="Int NOT NULL")]
		public int НомерСтроки
		{
			get
			{
				return this._НомерСтроки;
			}
			set
			{
				if ((this._НомерСтроки != value))
				{
					this.OnНомерСтрокиChanging(value);
					this.SendPropertyChanging();
					this._НомерСтроки = value;
					this.SendPropertyChanged("НомерСтроки");
					this.OnНомерСтрокиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Текст", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Текст
		{
			get
			{
				return this._Текст;
			}
			set
			{
				if ((this._Текст != value))
				{
					this.OnТекстChanging(value);
					this.SendPropertyChanging();
					this._Текст = value;
					this.SendPropertyChanged("Текст");
					this.OnТекстChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПризнакПечати", DbType="Bit NOT NULL")]
		public bool ПризнакПечати
		{
			get
			{
				return this._ПризнакПечати;
			}
			set
			{
				if ((this._ПризнакПечати != value))
				{
					this.OnПризнакПечатиChanging(value);
					this.SendPropertyChanging();
					this._ПризнакПечати = value;
					this.SendPropertyChanged("ПризнакПечати");
					this.OnПризнакПечатиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_записи_операции", DbType="Int")]
		public System.Nullable<int> id_записи_операции
		{
			get
			{
				return this._id_записи_операции;
			}
			set
			{
				if ((this._id_записи_операции != value))
				{
					if (this._ЖурналОпераций.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_записи_операцииChanging(value);
					this.SendPropertyChanging();
					this._id_записи_операции = value;
					this.SendPropertyChanged("id_записи_операции");
					this.Onid_записи_операцииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Документы_Резолюция", Storage="_Документы", ThisKey="id_документа", OtherKey="id_документа", IsForeignKey=true)]
		public Документы Документы
		{
			get
			{
				return this._Документы.Entity;
			}
			set
			{
				Документы previousValue = this._Документы.Entity;
				if (((previousValue != value) 
							|| (this._Документы.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Документы.Entity = null;
						previousValue.Резолюцияs.Remove(this);
					}
					this._Документы.Entity = value;
					if ((value != null))
					{
						value.Резолюцияs.Add(this);
						this._id_документа = value.id_документа;
					}
					else
					{
						this._id_документа = default(long);
					}
					this.SendPropertyChanged("Документы");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ЖурналОпераций_Резолюция", Storage="_ЖурналОпераций", ThisKey="id_записи_операции", OtherKey="id_записи", IsForeignKey=true)]
		public ЖурналОпераций ЖурналОпераций
		{
			get
			{
				return this._ЖурналОпераций.Entity;
			}
			set
			{
				ЖурналОпераций previousValue = this._ЖурналОпераций.Entity;
				if (((previousValue != value) 
							|| (this._ЖурналОпераций.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ЖурналОпераций.Entity = null;
						previousValue.Резолюцияs.Remove(this);
					}
					this._ЖурналОпераций.Entity = value;
					if ((value != null))
					{
						value.Резолюцияs.Add(this);
						this._id_записи_операции = value.id_записи;
					}
					else
					{
						this._id_записи_операции = default(Nullable<int>);
					}
					this.SendPropertyChanged("ЖурналОпераций");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.РолиПолномочийПользователей")]
	public partial class РолиПолномочийПользователей : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_роли;
		
		private string _Название_роли;
		
		private bool _Регистрация;
		
		private bool _Редактирвоание;
		
		private bool _ПросмотрСобственныхДокументов;
		
		private bool _ПросмотрДокументовОтдела;
		
		private bool _ПросмотрВсехДокументов;
		
		private bool _ПечатьКарточек;
		
		private bool _ПечатьВедомостей;
		
		private bool _ПечатьЖурнала;
		
		private bool _РаботатьСАктами;
		
		private bool _СмотретьСтатистику;
		
		private bool _РедактироватьСловари;
		
		private EntitySet<Пользователи> _Пользователиs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ролиChanging(short value);
    partial void Onid_ролиChanged();
    partial void OnНазвание_ролиChanging(string value);
    partial void OnНазвание_ролиChanged();
    partial void OnРегистрацияChanging(bool value);
    partial void OnРегистрацияChanged();
    partial void OnРедактирвоаниеChanging(bool value);
    partial void OnРедактирвоаниеChanged();
    partial void OnПросмотрСобственныхДокументовChanging(bool value);
    partial void OnПросмотрСобственныхДокументовChanged();
    partial void OnПросмотрДокументовОтделаChanging(bool value);
    partial void OnПросмотрДокументовОтделаChanged();
    partial void OnПросмотрВсехДокументовChanging(bool value);
    partial void OnПросмотрВсехДокументовChanged();
    partial void OnПечатьКарточекChanging(bool value);
    partial void OnПечатьКарточекChanged();
    partial void OnПечатьВедомостейChanging(bool value);
    partial void OnПечатьВедомостейChanged();
    partial void OnПечатьЖурналаChanging(bool value);
    partial void OnПечатьЖурналаChanged();
    partial void OnРаботатьСАктамиChanging(bool value);
    partial void OnРаботатьСАктамиChanged();
    partial void OnСмотретьСтатистикуChanging(bool value);
    partial void OnСмотретьСтатистикуChanged();
    partial void OnРедактироватьСловариChanging(bool value);
    partial void OnРедактироватьСловариChanged();
    #endregion
		
		public РолиПолномочийПользователей()
		{
			this._Пользователиs = new EntitySet<Пользователи>(new Action<Пользователи>(this.attach_Пользователиs), new Action<Пользователи>(this.detach_Пользователиs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_роли", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_роли
		{
			get
			{
				return this._id_роли;
			}
			set
			{
				if ((this._id_роли != value))
				{
					this.Onid_ролиChanging(value);
					this.SendPropertyChanging();
					this._id_роли = value;
					this.SendPropertyChanged("id_роли");
					this.Onid_ролиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Название_роли", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Название_роли
		{
			get
			{
				return this._Название_роли;
			}
			set
			{
				if ((this._Название_роли != value))
				{
					this.OnНазвание_ролиChanging(value);
					this.SendPropertyChanging();
					this._Название_роли = value;
					this.SendPropertyChanged("Название_роли");
					this.OnНазвание_ролиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Регистрация", DbType="Bit NOT NULL")]
		public bool Регистрация
		{
			get
			{
				return this._Регистрация;
			}
			set
			{
				if ((this._Регистрация != value))
				{
					this.OnРегистрацияChanging(value);
					this.SendPropertyChanging();
					this._Регистрация = value;
					this.SendPropertyChanged("Регистрация");
					this.OnРегистрацияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Редактирвоание", DbType="Bit NOT NULL")]
		public bool Редактирвоание
		{
			get
			{
				return this._Редактирвоание;
			}
			set
			{
				if ((this._Редактирвоание != value))
				{
					this.OnРедактирвоаниеChanging(value);
					this.SendPropertyChanging();
					this._Редактирвоание = value;
					this.SendPropertyChanged("Редактирвоание");
					this.OnРедактирвоаниеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПросмотрСобственныхДокументов", DbType="Bit NOT NULL")]
		public bool ПросмотрСобственныхДокументов
		{
			get
			{
				return this._ПросмотрСобственныхДокументов;
			}
			set
			{
				if ((this._ПросмотрСобственныхДокументов != value))
				{
					this.OnПросмотрСобственныхДокументовChanging(value);
					this.SendPropertyChanging();
					this._ПросмотрСобственныхДокументов = value;
					this.SendPropertyChanged("ПросмотрСобственныхДокументов");
					this.OnПросмотрСобственныхДокументовChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПросмотрДокументовОтдела", DbType="Bit NOT NULL")]
		public bool ПросмотрДокументовОтдела
		{
			get
			{
				return this._ПросмотрДокументовОтдела;
			}
			set
			{
				if ((this._ПросмотрДокументовОтдела != value))
				{
					this.OnПросмотрДокументовОтделаChanging(value);
					this.SendPropertyChanging();
					this._ПросмотрДокументовОтдела = value;
					this.SendPropertyChanged("ПросмотрДокументовОтдела");
					this.OnПросмотрДокументовОтделаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПросмотрВсехДокументов", DbType="Bit NOT NULL")]
		public bool ПросмотрВсехДокументов
		{
			get
			{
				return this._ПросмотрВсехДокументов;
			}
			set
			{
				if ((this._ПросмотрВсехДокументов != value))
				{
					this.OnПросмотрВсехДокументовChanging(value);
					this.SendPropertyChanging();
					this._ПросмотрВсехДокументов = value;
					this.SendPropertyChanged("ПросмотрВсехДокументов");
					this.OnПросмотрВсехДокументовChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПечатьКарточек", DbType="Bit NOT NULL")]
		public bool ПечатьКарточек
		{
			get
			{
				return this._ПечатьКарточек;
			}
			set
			{
				if ((this._ПечатьКарточек != value))
				{
					this.OnПечатьКарточекChanging(value);
					this.SendPropertyChanging();
					this._ПечатьКарточек = value;
					this.SendPropertyChanged("ПечатьКарточек");
					this.OnПечатьКарточекChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПечатьВедомостей", DbType="Bit NOT NULL")]
		public bool ПечатьВедомостей
		{
			get
			{
				return this._ПечатьВедомостей;
			}
			set
			{
				if ((this._ПечатьВедомостей != value))
				{
					this.OnПечатьВедомостейChanging(value);
					this.SendPropertyChanging();
					this._ПечатьВедомостей = value;
					this.SendPropertyChanged("ПечатьВедомостей");
					this.OnПечатьВедомостейChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПечатьЖурнала", DbType="Bit NOT NULL")]
		public bool ПечатьЖурнала
		{
			get
			{
				return this._ПечатьЖурнала;
			}
			set
			{
				if ((this._ПечатьЖурнала != value))
				{
					this.OnПечатьЖурналаChanging(value);
					this.SendPropertyChanging();
					this._ПечатьЖурнала = value;
					this.SendPropertyChanged("ПечатьЖурнала");
					this.OnПечатьЖурналаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_РаботатьСАктами", DbType="Bit NOT NULL")]
		public bool РаботатьСАктами
		{
			get
			{
				return this._РаботатьСАктами;
			}
			set
			{
				if ((this._РаботатьСАктами != value))
				{
					this.OnРаботатьСАктамиChanging(value);
					this.SendPropertyChanging();
					this._РаботатьСАктами = value;
					this.SendPropertyChanged("РаботатьСАктами");
					this.OnРаботатьСАктамиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СмотретьСтатистику", DbType="Bit NOT NULL")]
		public bool СмотретьСтатистику
		{
			get
			{
				return this._СмотретьСтатистику;
			}
			set
			{
				if ((this._СмотретьСтатистику != value))
				{
					this.OnСмотретьСтатистикуChanging(value);
					this.SendPropertyChanging();
					this._СмотретьСтатистику = value;
					this.SendPropertyChanged("СмотретьСтатистику");
					this.OnСмотретьСтатистикуChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_РедактироватьСловари", DbType="Bit NOT NULL")]
		public bool РедактироватьСловари
		{
			get
			{
				return this._РедактироватьСловари;
			}
			set
			{
				if ((this._РедактироватьСловари != value))
				{
					this.OnРедактироватьСловариChanging(value);
					this.SendPropertyChanging();
					this._РедактироватьСловари = value;
					this.SendPropertyChanged("РедактироватьСловари");
					this.OnРедактироватьСловариChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="РолиПолномочийПользователей_Пользователи", Storage="_Пользователиs", ThisKey="id_роли", OtherKey="id_роли")]
		public EntitySet<Пользователи> Пользователиs
		{
			get
			{
				return this._Пользователиs;
			}
			set
			{
				this._Пользователиs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Пользователиs(Пользователи entity)
		{
			this.SendPropertyChanging();
			entity.РолиПолномочийПользователей = this;
		}
		
		private void detach_Пользователиs(Пользователи entity)
		{
			this.SendPropertyChanging();
			entity.РолиПолномочийПользователей = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ДокРедактор")]
	public partial class ДокРедактор
	{
		
		private int _Код_акта;
		
		private string _НомерАкта;
		
		private System.Nullable<int> _КоличествоДокументов;
		
		private string _Путь;
		
		public ДокРедактор()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код_акта", DbType="Int NOT NULL")]
		public int Код_акта
		{
			get
			{
				return this._Код_акта;
			}
			set
			{
				if ((this._Код_акта != value))
				{
					this._Код_акта = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомерАкта", DbType="VarChar(50)")]
		public string НомерАкта
		{
			get
			{
				return this._НомерАкта;
			}
			set
			{
				if ((this._НомерАкта != value))
				{
					this._НомерАкта = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоДокументов", DbType="Int")]
		public System.Nullable<int> КоличествоДокументов
		{
			get
			{
				return this._КоличествоДокументов;
			}
			set
			{
				if ((this._КоличествоДокументов != value))
				{
					this._КоличествоДокументов = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Путь", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Путь
		{
			get
			{
				return this._Путь;
			}
			set
			{
				if ((this._Путь != value))
				{
					this._Путь = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.МестоположениеДокумента")]
	public partial class МестоположениеДокумента
	{
		
		private int _id_записи;
		
		private long _id_документа;
		
		private short _id_операции;
		
		private System.DateTime _датаНачалаОперации;
		
		private short _id_исполнителя;
		
		private string _Комментарий;
		
		public МестоположениеДокумента()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_записи", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id_записи
		{
			get
			{
				return this._id_записи;
			}
			set
			{
				if ((this._id_записи != value))
				{
					this._id_записи = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_документа", DbType="BigInt NOT NULL")]
		public long id_документа
		{
			get
			{
				return this._id_документа;
			}
			set
			{
				if ((this._id_документа != value))
				{
					this._id_документа = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_операции", DbType="SmallInt NOT NULL")]
		public short id_операции
		{
			get
			{
				return this._id_операции;
			}
			set
			{
				if ((this._id_операции != value))
				{
					this._id_операции = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_датаНачалаОперации", DbType="Date NOT NULL")]
		public System.DateTime датаНачалаОперации
		{
			get
			{
				return this._датаНачалаОперации;
			}
			set
			{
				if ((this._датаНачалаОперации != value))
				{
					this._датаНачалаОперации = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_исполнителя", DbType="SmallInt NOT NULL")]
		public short id_исполнителя
		{
			get
			{
				return this._id_исполнителя;
			}
			set
			{
				if ((this._id_исполнителя != value))
				{
					this._id_исполнителя = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Комментарий", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Комментарий
		{
			get
			{
				return this._Комментарий;
			}
			set
			{
				if ((this._Комментарий != value))
				{
					this._Комментарий = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ДокументыИсполнителей")]
	public partial class ДокументыИсполнителей
	{
		
		private string _Исполнитель;
		
		private System.Nullable<int> _Год;
		
		private System.Nullable<int> _КоличествоНеОтработанныхДокументов;
		
		public ДокументыИсполнителей()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Исполнитель", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Исполнитель
		{
			get
			{
				return this._Исполнитель;
			}
			set
			{
				if ((this._Исполнитель != value))
				{
					this._Исполнитель = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Год", DbType="Int")]
		public System.Nullable<int> Год
		{
			get
			{
				return this._Год;
			}
			set
			{
				if ((this._Год != value))
				{
					this._Год = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоНеОтработанныхДокументов", DbType="Int")]
		public System.Nullable<int> КоличествоНеОтработанныхДокументов
		{
			get
			{
				return this._КоличествоНеОтработанныхДокументов;
			}
			set
			{
				if ((this._КоличествоНеОтработанныхДокументов != value))
				{
					this._КоличествоНеОтработанныхДокументов = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.КоличествоЗакрытыхДокументов")]
	public partial class КоличествоЗакрытыхДокументов
	{
		
		private int _Год;
		
		private System.Nullable<int> _КоличествоДокументов;
		
		public КоличествоЗакрытыхДокументов()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Год", DbType="Int NOT NULL")]
		public int Год
		{
			get
			{
				return this._Год;
			}
			set
			{
				if ((this._Год != value))
				{
					this._Год = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоДокументов", DbType="Int")]
		public System.Nullable<int> КоличествоДокументов
		{
			get
			{
				return this._КоличествоДокументов;
			}
			set
			{
				if ((this._КоличествоДокументов != value))
				{
					this._КоличествоДокументов = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.КоличествоЗакрытыхДокументовИсполнителем")]
	public partial class КоличествоЗакрытыхДокументовИсполнителем
	{
		
		private string _Исполнитель;
		
		private int _Год;
		
		private System.Nullable<int> _КоличестовДокументов;
		
		public КоличествоЗакрытыхДокументовИсполнителем()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Исполнитель", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Исполнитель
		{
			get
			{
				return this._Исполнитель;
			}
			set
			{
				if ((this._Исполнитель != value))
				{
					this._Исполнитель = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Год", DbType="Int NOT NULL")]
		public int Год
		{
			get
			{
				return this._Год;
			}
			set
			{
				if ((this._Год != value))
				{
					this._Год = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличестовДокументов", DbType="Int")]
		public System.Nullable<int> КоличестовДокументов
		{
			get
			{
				return this._КоличестовДокументов;
			}
			set
			{
				if ((this._КоличестовДокументов != value))
				{
					this._КоличестовДокументов = value;
				}
			}
		}
	}
	
	public partial class GetDocumentsByYearResult
	{
		
		private long _id_документа;
		
		private System.Nullable<byte> _id_грифа;
		
		private string _РегНомер;
		
		private System.Nullable<int> _ВходящийНомер;
		
		private System.Nullable<System.DateTime> _ДатаПодписи;
		
		private System.Nullable<System.DateTime> _ДатаРегистрации;
		
		private System.Nullable<int> _id_подразделения;
		
		private string _НомерЭкземпляра;
		
		private string _КоличествоЛистовЭкзепляра;
		
		private string _КоличествоЛистовПриложения;
		
		private System.Nullable<int> _id_получателя;
		
		private System.Nullable<int> _id_журанала;
		
		private System.Nullable<int> _id_пользователя;
		
		private System.Nullable<int> _Код_акта;
		
		private string _ИсполнениеНомер;
		
		private System.Nullable<System.DateTime> _ДатаИсполнения;
		
		private string _ДелоНомер;
		
		private string _Том;
		
		private string _Лист;
		
		private string _Индекс;
		
		private string _НазваниеДокумента;
		
		private string _НазваниеПриложения;
		
		private string _Подписной;
		
		private System.Nullable<bool> _ПризнакПечати;
		
		private string _НомераПриложений;
		
		private string _КомментарийКому;
		
		private string _КомментарийОткуда;
		
		private bool _запретИзменения;
		
		private string _номерДокумента;
		
		private string _от;
		
		private System.Nullable<bool> _Наличие;
		
		private string _от2;
		
		private System.Nullable<int> _id_виддокумента;
		
		private string _Акт;
		
		private bool _ПризнакПечатиВЖурнале;
		
		private System.Nullable<System.DateTime> _ДатаКонтроля;
		
		private string _ДопМатериалы;
		
		private string _Исполнение;
		
		private bool _НаУдаление;
		
		private string _ПолныйВходящийНомер;
		
		private System.Nullable<System.DateTime> _ДатаВозврата;
		
		private bool _Вернуть;
		
		private bool _Закрыт;
		
		private System.Nullable<long> _Перерегистрирован;
		
		private System.Nullable<int> _id_исполнителя;
		
		public GetDocumentsByYearResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_документа", DbType="BigInt NOT NULL")]
		public long id_документа
		{
			get
			{
				return this._id_документа;
			}
			set
			{
				if ((this._id_документа != value))
				{
					this._id_документа = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_грифа", DbType="TinyInt")]
		public System.Nullable<byte> id_грифа
		{
			get
			{
				return this._id_грифа;
			}
			set
			{
				if ((this._id_грифа != value))
				{
					this._id_грифа = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_РегНомер", DbType="VarChar(64)")]
		public string РегНомер
		{
			get
			{
				return this._РегНомер;
			}
			set
			{
				if ((this._РегНомер != value))
				{
					this._РегНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ВходящийНомер", DbType="Int")]
		public System.Nullable<int> ВходящийНомер
		{
			get
			{
				return this._ВходящийНомер;
			}
			set
			{
				if ((this._ВходящийНомер != value))
				{
					this._ВходящийНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаПодписи", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаПодписи
		{
			get
			{
				return this._ДатаПодписи;
			}
			set
			{
				if ((this._ДатаПодписи != value))
				{
					this._ДатаПодписи = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаРегистрации", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаРегистрации
		{
			get
			{
				return this._ДатаРегистрации;
			}
			set
			{
				if ((this._ДатаРегистрации != value))
				{
					this._ДатаРегистрации = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_подразделения", DbType="Int")]
		public System.Nullable<int> id_подразделения
		{
			get
			{
				return this._id_подразделения;
			}
			set
			{
				if ((this._id_подразделения != value))
				{
					this._id_подразделения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомерЭкземпляра", DbType="VarChar(50)")]
		public string НомерЭкземпляра
		{
			get
			{
				return this._НомерЭкземпляра;
			}
			set
			{
				if ((this._НомерЭкземпляра != value))
				{
					this._НомерЭкземпляра = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоЛистовЭкзепляра", DbType="VarChar(50)")]
		public string КоличествоЛистовЭкзепляра
		{
			get
			{
				return this._КоличествоЛистовЭкзепляра;
			}
			set
			{
				if ((this._КоличествоЛистовЭкзепляра != value))
				{
					this._КоличествоЛистовЭкзепляра = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоЛистовПриложения", DbType="VarChar(50)")]
		public string КоличествоЛистовПриложения
		{
			get
			{
				return this._КоличествоЛистовПриложения;
			}
			set
			{
				if ((this._КоличествоЛистовПриложения != value))
				{
					this._КоличествоЛистовПриложения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_получателя", DbType="Int")]
		public System.Nullable<int> id_получателя
		{
			get
			{
				return this._id_получателя;
			}
			set
			{
				if ((this._id_получателя != value))
				{
					this._id_получателя = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_журанала", DbType="Int")]
		public System.Nullable<int> id_журанала
		{
			get
			{
				return this._id_журанала;
			}
			set
			{
				if ((this._id_журанала != value))
				{
					this._id_журанала = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_пользователя", DbType="Int")]
		public System.Nullable<int> id_пользователя
		{
			get
			{
				return this._id_пользователя;
			}
			set
			{
				if ((this._id_пользователя != value))
				{
					this._id_пользователя = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код_акта", DbType="Int")]
		public System.Nullable<int> Код_акта
		{
			get
			{
				return this._Код_акта;
			}
			set
			{
				if ((this._Код_акта != value))
				{
					this._Код_акта = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИсполнениеНомер", DbType="VarChar(128)")]
		public string ИсполнениеНомер
		{
			get
			{
				return this._ИсполнениеНомер;
			}
			set
			{
				if ((this._ИсполнениеНомер != value))
				{
					this._ИсполнениеНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаИсполнения", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаИсполнения
		{
			get
			{
				return this._ДатаИсполнения;
			}
			set
			{
				if ((this._ДатаИсполнения != value))
				{
					this._ДатаИсполнения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДелоНомер", DbType="VarChar(50)")]
		public string ДелоНомер
		{
			get
			{
				return this._ДелоНомер;
			}
			set
			{
				if ((this._ДелоНомер != value))
				{
					this._ДелоНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Том", DbType="VarChar(50)")]
		public string Том
		{
			get
			{
				return this._Том;
			}
			set
			{
				if ((this._Том != value))
				{
					this._Том = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Лист", DbType="VarChar(50)")]
		public string Лист
		{
			get
			{
				return this._Лист;
			}
			set
			{
				if ((this._Лист != value))
				{
					this._Лист = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Индекс", DbType="VarChar(50)")]
		public string Индекс
		{
			get
			{
				return this._Индекс;
			}
			set
			{
				if ((this._Индекс != value))
				{
					this._Индекс = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазваниеДокумента", DbType="VarChar(256)")]
		public string НазваниеДокумента
		{
			get
			{
				return this._НазваниеДокумента;
			}
			set
			{
				if ((this._НазваниеДокумента != value))
				{
					this._НазваниеДокумента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазваниеПриложения", DbType="VarChar(256)")]
		public string НазваниеПриложения
		{
			get
			{
				return this._НазваниеПриложения;
			}
			set
			{
				if ((this._НазваниеПриложения != value))
				{
					this._НазваниеПриложения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Подписной", DbType="VarChar(50)")]
		public string Подписной
		{
			get
			{
				return this._Подписной;
			}
			set
			{
				if ((this._Подписной != value))
				{
					this._Подписной = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПризнакПечати", DbType="Bit")]
		public System.Nullable<bool> ПризнакПечати
		{
			get
			{
				return this._ПризнакПечати;
			}
			set
			{
				if ((this._ПризнакПечати != value))
				{
					this._ПризнакПечати = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомераПриложений", DbType="VarChar(128)")]
		public string НомераПриложений
		{
			get
			{
				return this._НомераПриложений;
			}
			set
			{
				if ((this._НомераПриложений != value))
				{
					this._НомераПриложений = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КомментарийКому", DbType="VarChar(128)")]
		public string КомментарийКому
		{
			get
			{
				return this._КомментарийКому;
			}
			set
			{
				if ((this._КомментарийКому != value))
				{
					this._КомментарийКому = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КомментарийОткуда", DbType="VarChar(128)")]
		public string КомментарийОткуда
		{
			get
			{
				return this._КомментарийОткуда;
			}
			set
			{
				if ((this._КомментарийОткуда != value))
				{
					this._КомментарийОткуда = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_запретИзменения", DbType="Bit NOT NULL")]
		public bool запретИзменения
		{
			get
			{
				return this._запретИзменения;
			}
			set
			{
				if ((this._запретИзменения != value))
				{
					this._запретИзменения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_номерДокумента", DbType="VarChar(256)")]
		public string номерДокумента
		{
			get
			{
				return this._номерДокумента;
			}
			set
			{
				if ((this._номерДокумента != value))
				{
					this._номерДокумента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_от", DbType="VarChar(50)")]
		public string от
		{
			get
			{
				return this._от;
			}
			set
			{
				if ((this._от != value))
				{
					this._от = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Наличие", DbType="Bit")]
		public System.Nullable<bool> Наличие
		{
			get
			{
				return this._Наличие;
			}
			set
			{
				if ((this._Наличие != value))
				{
					this._Наличие = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_от2", DbType="VarChar(50)")]
		public string от2
		{
			get
			{
				return this._от2;
			}
			set
			{
				if ((this._от2 != value))
				{
					this._от2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_виддокумента", DbType="Int")]
		public System.Nullable<int> id_виддокумента
		{
			get
			{
				return this._id_виддокумента;
			}
			set
			{
				if ((this._id_виддокумента != value))
				{
					this._id_виддокумента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Акт", DbType="VarChar(50)")]
		public string Акт
		{
			get
			{
				return this._Акт;
			}
			set
			{
				if ((this._Акт != value))
				{
					this._Акт = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПризнакПечатиВЖурнале", DbType="Bit NOT NULL")]
		public bool ПризнакПечатиВЖурнале
		{
			get
			{
				return this._ПризнакПечатиВЖурнале;
			}
			set
			{
				if ((this._ПризнакПечатиВЖурнале != value))
				{
					this._ПризнакПечатиВЖурнале = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаКонтроля", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаКонтроля
		{
			get
			{
				return this._ДатаКонтроля;
			}
			set
			{
				if ((this._ДатаКонтроля != value))
				{
					this._ДатаКонтроля = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДопМатериалы", DbType="VarChar(50)")]
		public string ДопМатериалы
		{
			get
			{
				return this._ДопМатериалы;
			}
			set
			{
				if ((this._ДопМатериалы != value))
				{
					this._ДопМатериалы = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Исполнение", DbType="VarChar(256)")]
		public string Исполнение
		{
			get
			{
				return this._Исполнение;
			}
			set
			{
				if ((this._Исполнение != value))
				{
					this._Исполнение = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НаУдаление", DbType="Bit NOT NULL")]
		public bool НаУдаление
		{
			get
			{
				return this._НаУдаление;
			}
			set
			{
				if ((this._НаУдаление != value))
				{
					this._НаУдаление = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПолныйВходящийНомер", DbType="VarChar(50)")]
		public string ПолныйВходящийНомер
		{
			get
			{
				return this._ПолныйВходящийНомер;
			}
			set
			{
				if ((this._ПолныйВходящийНомер != value))
				{
					this._ПолныйВходящийНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаВозврата", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаВозврата
		{
			get
			{
				return this._ДатаВозврата;
			}
			set
			{
				if ((this._ДатаВозврата != value))
				{
					this._ДатаВозврата = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Вернуть", DbType="Bit NOT NULL")]
		public bool Вернуть
		{
			get
			{
				return this._Вернуть;
			}
			set
			{
				if ((this._Вернуть != value))
				{
					this._Вернуть = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Закрыт", DbType="Bit NOT NULL")]
		public bool Закрыт
		{
			get
			{
				return this._Закрыт;
			}
			set
			{
				if ((this._Закрыт != value))
				{
					this._Закрыт = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Перерегистрирован", DbType="BigInt")]
		public System.Nullable<long> Перерегистрирован
		{
			get
			{
				return this._Перерегистрирован;
			}
			set
			{
				if ((this._Перерегистрирован != value))
				{
					this._Перерегистрирован = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_исполнителя", DbType="Int")]
		public System.Nullable<int> id_исполнителя
		{
			get
			{
				return this._id_исполнителя;
			}
			set
			{
				if ((this._id_исполнителя != value))
				{
					this._id_исполнителя = value;
				}
			}
		}
	}
	
	public partial class GetExecutorResult
	{
		
		private string _Исполнитель;
		
		public GetExecutorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Исполнитель", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Исполнитель
		{
			get
			{
				return this._Исполнитель;
			}
			set
			{
				if ((this._Исполнитель != value))
				{
					this._Исполнитель = value;
				}
			}
		}
	}
	
	public partial class GetExecutorByRecipientResult
	{
		
		private System.Nullable<int> _id_исполнителя;
		
		public GetExecutorByRecipientResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_исполнителя", DbType="Int")]
		public System.Nullable<int> id_исполнителя
		{
			get
			{
				return this._id_исполнителя;
			}
			set
			{
				if ((this._id_исполнителя != value))
				{
					this._id_исполнителя = value;
				}
			}
		}
	}
	
	public partial class GetIdDocumentsFromExecutorResult
	{
		
		private long _id_документа;
		
		public GetIdDocumentsFromExecutorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_документа", DbType="BigInt NOT NULL")]
		public long id_документа
		{
			get
			{
				return this._id_документа;
			}
			set
			{
				if ((this._id_документа != value))
				{
					this._id_документа = value;
				}
			}
		}
	}
	
	public partial class GetLocationResult
	{
		
		private string _Местонахождения;
		
		public GetLocationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Местонахождения", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Местонахождения
		{
			get
			{
				return this._Местонахождения;
			}
			set
			{
				if ((this._Местонахождения != value))
				{
					this._Местонахождения = value;
				}
			}
		}
	}
	
	public partial class GetDocsByViewResult
	{
		
		private long _id_документа;
		
		private System.Nullable<byte> _id_грифа;
		
		private string _РегНомер;
		
		private System.Nullable<int> _ВходящийНомер;
		
		private System.Nullable<System.DateTime> _ДатаПодписи;
		
		private System.Nullable<System.DateTime> _ДатаРегистрации;
		
		private System.Nullable<short> _id_подразделения;
		
		private string _НомерЭкземпляра;
		
		private string _КоличествоЛистовЭкзепляра;
		
		private string _КоличествоЛистовПриложения;
		
		private System.Nullable<short> _id_получателя;
		
		private System.Nullable<int> _id_журанала;
		
		private System.Nullable<byte> _id_пользователя;
		
		private System.Nullable<int> _Код_акта;
		
		private string _ИсполнениеНомер;
		
		private System.Nullable<System.DateTime> _ДатаИсполнения;
		
		private string _ДелоНомер;
		
		private string _Том;
		
		private string _Лист;
		
		private string _Индекс;
		
		private string _НазваниеДокумента;
		
		private string _НазваниеПриложения;
		
		private string _Подписной;
		
		private System.Nullable<bool> _ПризнакПечати;
		
		private string _НомераПриложений;
		
		private string _КомментарийКому;
		
		private string _КомментарийОткуда;
		
		private bool _запретИзменения;
		
		private string _номерДокумента;
		
		private string _от;
		
		private System.Nullable<bool> _Наличие;
		
		private string _от2;
		
		private System.Nullable<byte> _id_виддокумента;
		
		private string _Акт;
		
		private bool _ПризнакПечатиВЖурнале;
		
		private System.Nullable<System.DateTime> _ДатаКонтроля;
		
		private string _ДопМатериалы;
		
		private string _Исполнение;
		
		private bool _НаУдаление;
		
		private string _ПолныйВходящийНомер;
		
		private System.Nullable<System.DateTime> _ДатаВозврата;
		
		private bool _Вернуть;
		
		private bool _Закрыт;
		
		private System.Nullable<long> _Перерегистрирован;
		
		private System.Nullable<short> _id_исполнителя;
		
		public GetDocsByViewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_документа", DbType="BigInt NOT NULL")]
		public long id_документа
		{
			get
			{
				return this._id_документа;
			}
			set
			{
				if ((this._id_документа != value))
				{
					this._id_документа = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_грифа", DbType="TinyInt")]
		public System.Nullable<byte> id_грифа
		{
			get
			{
				return this._id_грифа;
			}
			set
			{
				if ((this._id_грифа != value))
				{
					this._id_грифа = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_РегНомер", DbType="VarChar(64)")]
		public string РегНомер
		{
			get
			{
				return this._РегНомер;
			}
			set
			{
				if ((this._РегНомер != value))
				{
					this._РегНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ВходящийНомер", DbType="Int")]
		public System.Nullable<int> ВходящийНомер
		{
			get
			{
				return this._ВходящийНомер;
			}
			set
			{
				if ((this._ВходящийНомер != value))
				{
					this._ВходящийНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаПодписи", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаПодписи
		{
			get
			{
				return this._ДатаПодписи;
			}
			set
			{
				if ((this._ДатаПодписи != value))
				{
					this._ДатаПодписи = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаРегистрации", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаРегистрации
		{
			get
			{
				return this._ДатаРегистрации;
			}
			set
			{
				if ((this._ДатаРегистрации != value))
				{
					this._ДатаРегистрации = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_подразделения", DbType="SmallInt")]
		public System.Nullable<short> id_подразделения
		{
			get
			{
				return this._id_подразделения;
			}
			set
			{
				if ((this._id_подразделения != value))
				{
					this._id_подразделения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомерЭкземпляра", DbType="VarChar(50)")]
		public string НомерЭкземпляра
		{
			get
			{
				return this._НомерЭкземпляра;
			}
			set
			{
				if ((this._НомерЭкземпляра != value))
				{
					this._НомерЭкземпляра = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоЛистовЭкзепляра", DbType="VarChar(50)")]
		public string КоличествоЛистовЭкзепляра
		{
			get
			{
				return this._КоличествоЛистовЭкзепляра;
			}
			set
			{
				if ((this._КоличествоЛистовЭкзепляра != value))
				{
					this._КоличествоЛистовЭкзепляра = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоЛистовПриложения", DbType="VarChar(50)")]
		public string КоличествоЛистовПриложения
		{
			get
			{
				return this._КоличествоЛистовПриложения;
			}
			set
			{
				if ((this._КоличествоЛистовПриложения != value))
				{
					this._КоличествоЛистовПриложения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_получателя", DbType="SmallInt")]
		public System.Nullable<short> id_получателя
		{
			get
			{
				return this._id_получателя;
			}
			set
			{
				if ((this._id_получателя != value))
				{
					this._id_получателя = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_журанала", DbType="Int")]
		public System.Nullable<int> id_журанала
		{
			get
			{
				return this._id_журанала;
			}
			set
			{
				if ((this._id_журанала != value))
				{
					this._id_журанала = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_пользователя", DbType="TinyInt")]
		public System.Nullable<byte> id_пользователя
		{
			get
			{
				return this._id_пользователя;
			}
			set
			{
				if ((this._id_пользователя != value))
				{
					this._id_пользователя = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код_акта", DbType="Int")]
		public System.Nullable<int> Код_акта
		{
			get
			{
				return this._Код_акта;
			}
			set
			{
				if ((this._Код_акта != value))
				{
					this._Код_акта = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИсполнениеНомер", DbType="VarChar(128)")]
		public string ИсполнениеНомер
		{
			get
			{
				return this._ИсполнениеНомер;
			}
			set
			{
				if ((this._ИсполнениеНомер != value))
				{
					this._ИсполнениеНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаИсполнения", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаИсполнения
		{
			get
			{
				return this._ДатаИсполнения;
			}
			set
			{
				if ((this._ДатаИсполнения != value))
				{
					this._ДатаИсполнения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДелоНомер", DbType="VarChar(50)")]
		public string ДелоНомер
		{
			get
			{
				return this._ДелоНомер;
			}
			set
			{
				if ((this._ДелоНомер != value))
				{
					this._ДелоНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Том", DbType="VarChar(50)")]
		public string Том
		{
			get
			{
				return this._Том;
			}
			set
			{
				if ((this._Том != value))
				{
					this._Том = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Лист", DbType="VarChar(50)")]
		public string Лист
		{
			get
			{
				return this._Лист;
			}
			set
			{
				if ((this._Лист != value))
				{
					this._Лист = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Индекс", DbType="VarChar(50)")]
		public string Индекс
		{
			get
			{
				return this._Индекс;
			}
			set
			{
				if ((this._Индекс != value))
				{
					this._Индекс = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазваниеДокумента", DbType="VarChar(256)")]
		public string НазваниеДокумента
		{
			get
			{
				return this._НазваниеДокумента;
			}
			set
			{
				if ((this._НазваниеДокумента != value))
				{
					this._НазваниеДокумента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазваниеПриложения", DbType="VarChar(256)")]
		public string НазваниеПриложения
		{
			get
			{
				return this._НазваниеПриложения;
			}
			set
			{
				if ((this._НазваниеПриложения != value))
				{
					this._НазваниеПриложения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Подписной", DbType="VarChar(50)")]
		public string Подписной
		{
			get
			{
				return this._Подписной;
			}
			set
			{
				if ((this._Подписной != value))
				{
					this._Подписной = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПризнакПечати", DbType="Bit")]
		public System.Nullable<bool> ПризнакПечати
		{
			get
			{
				return this._ПризнакПечати;
			}
			set
			{
				if ((this._ПризнакПечати != value))
				{
					this._ПризнакПечати = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомераПриложений", DbType="VarChar(128)")]
		public string НомераПриложений
		{
			get
			{
				return this._НомераПриложений;
			}
			set
			{
				if ((this._НомераПриложений != value))
				{
					this._НомераПриложений = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КомментарийКому", DbType="VarChar(128)")]
		public string КомментарийКому
		{
			get
			{
				return this._КомментарийКому;
			}
			set
			{
				if ((this._КомментарийКому != value))
				{
					this._КомментарийКому = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КомментарийОткуда", DbType="VarChar(128)")]
		public string КомментарийОткуда
		{
			get
			{
				return this._КомментарийОткуда;
			}
			set
			{
				if ((this._КомментарийОткуда != value))
				{
					this._КомментарийОткуда = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_запретИзменения", DbType="Bit NOT NULL")]
		public bool запретИзменения
		{
			get
			{
				return this._запретИзменения;
			}
			set
			{
				if ((this._запретИзменения != value))
				{
					this._запретИзменения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_номерДокумента", DbType="VarChar(256)")]
		public string номерДокумента
		{
			get
			{
				return this._номерДокумента;
			}
			set
			{
				if ((this._номерДокумента != value))
				{
					this._номерДокумента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_от", DbType="VarChar(50)")]
		public string от
		{
			get
			{
				return this._от;
			}
			set
			{
				if ((this._от != value))
				{
					this._от = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Наличие", DbType="Bit")]
		public System.Nullable<bool> Наличие
		{
			get
			{
				return this._Наличие;
			}
			set
			{
				if ((this._Наличие != value))
				{
					this._Наличие = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_от2", DbType="VarChar(50)")]
		public string от2
		{
			get
			{
				return this._от2;
			}
			set
			{
				if ((this._от2 != value))
				{
					this._от2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_виддокумента", DbType="TinyInt")]
		public System.Nullable<byte> id_виддокумента
		{
			get
			{
				return this._id_виддокумента;
			}
			set
			{
				if ((this._id_виддокумента != value))
				{
					this._id_виддокумента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Акт", DbType="VarChar(50)")]
		public string Акт
		{
			get
			{
				return this._Акт;
			}
			set
			{
				if ((this._Акт != value))
				{
					this._Акт = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПризнакПечатиВЖурнале", DbType="Bit NOT NULL")]
		public bool ПризнакПечатиВЖурнале
		{
			get
			{
				return this._ПризнакПечатиВЖурнале;
			}
			set
			{
				if ((this._ПризнакПечатиВЖурнале != value))
				{
					this._ПризнакПечатиВЖурнале = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаКонтроля", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаКонтроля
		{
			get
			{
				return this._ДатаКонтроля;
			}
			set
			{
				if ((this._ДатаКонтроля != value))
				{
					this._ДатаКонтроля = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДопМатериалы", DbType="VarChar(50)")]
		public string ДопМатериалы
		{
			get
			{
				return this._ДопМатериалы;
			}
			set
			{
				if ((this._ДопМатериалы != value))
				{
					this._ДопМатериалы = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Исполнение", DbType="VarChar(256)")]
		public string Исполнение
		{
			get
			{
				return this._Исполнение;
			}
			set
			{
				if ((this._Исполнение != value))
				{
					this._Исполнение = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НаУдаление", DbType="Bit NOT NULL")]
		public bool НаУдаление
		{
			get
			{
				return this._НаУдаление;
			}
			set
			{
				if ((this._НаУдаление != value))
				{
					this._НаУдаление = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПолныйВходящийНомер", DbType="VarChar(50)")]
		public string ПолныйВходящийНомер
		{
			get
			{
				return this._ПолныйВходящийНомер;
			}
			set
			{
				if ((this._ПолныйВходящийНомер != value))
				{
					this._ПолныйВходящийНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаВозврата", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаВозврата
		{
			get
			{
				return this._ДатаВозврата;
			}
			set
			{
				if ((this._ДатаВозврата != value))
				{
					this._ДатаВозврата = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Вернуть", DbType="Bit NOT NULL")]
		public bool Вернуть
		{
			get
			{
				return this._Вернуть;
			}
			set
			{
				if ((this._Вернуть != value))
				{
					this._Вернуть = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Закрыт", DbType="Bit NOT NULL")]
		public bool Закрыт
		{
			get
			{
				return this._Закрыт;
			}
			set
			{
				if ((this._Закрыт != value))
				{
					this._Закрыт = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Перерегистрирован", DbType="BigInt")]
		public System.Nullable<long> Перерегистрирован
		{
			get
			{
				return this._Перерегистрирован;
			}
			set
			{
				if ((this._Перерегистрирован != value))
				{
					this._Перерегистрирован = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_исполнителя", DbType="SmallInt")]
		public System.Nullable<short> id_исполнителя
		{
			get
			{
				return this._id_исполнителя;
			}
			set
			{
				if ((this._id_исполнителя != value))
				{
					this._id_исполнителя = value;
				}
			}
		}
	}
	
	public partial class GetDocsByYearResult
	{
		
		private long _id_документа;
		
		private System.Nullable<byte> _id_грифа;
		
		private string _РегНомер;
		
		private System.Nullable<int> _ВходящийНомер;
		
		private System.Nullable<System.DateTime> _ДатаПодписи;
		
		private System.Nullable<System.DateTime> _ДатаРегистрации;
		
		private System.Nullable<short> _id_подразделения;
		
		private string _НомерЭкземпляра;
		
		private string _КоличествоЛистовЭкзепляра;
		
		private string _КоличествоЛистовПриложения;
		
		private System.Nullable<short> _id_получателя;
		
		private System.Nullable<int> _id_журанала;
		
		private System.Nullable<byte> _id_пользователя;
		
		private System.Nullable<int> _Код_акта;
		
		private string _ИсполнениеНомер;
		
		private System.Nullable<System.DateTime> _ДатаИсполнения;
		
		private string _ДелоНомер;
		
		private string _Том;
		
		private string _Лист;
		
		private string _Индекс;
		
		private string _НазваниеДокумента;
		
		private string _НазваниеПриложения;
		
		private string _Подписной;
		
		private System.Nullable<bool> _ПризнакПечати;
		
		private string _НомераПриложений;
		
		private string _КомментарийКому;
		
		private string _КомментарийОткуда;
		
		private bool _запретИзменения;
		
		private string _номерДокумента;
		
		private string _от;
		
		private System.Nullable<bool> _Наличие;
		
		private string _от2;
		
		private System.Nullable<byte> _id_виддокумента;
		
		private string _Акт;
		
		private bool _ПризнакПечатиВЖурнале;
		
		private System.Nullable<System.DateTime> _ДатаКонтроля;
		
		private string _ДопМатериалы;
		
		private string _Исполнение;
		
		private bool _НаУдаление;
		
		private string _ПолныйВходящийНомер;
		
		private System.Nullable<System.DateTime> _ДатаВозврата;
		
		private bool _Вернуть;
		
		private bool _Закрыт;
		
		private System.Nullable<long> _Перерегистрирован;
		
		private System.Nullable<short> _id_исполнителя;
		
		public GetDocsByYearResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_документа", DbType="BigInt NOT NULL")]
		public long id_документа
		{
			get
			{
				return this._id_документа;
			}
			set
			{
				if ((this._id_документа != value))
				{
					this._id_документа = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_грифа", DbType="TinyInt")]
		public System.Nullable<byte> id_грифа
		{
			get
			{
				return this._id_грифа;
			}
			set
			{
				if ((this._id_грифа != value))
				{
					this._id_грифа = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_РегНомер", DbType="VarChar(64)")]
		public string РегНомер
		{
			get
			{
				return this._РегНомер;
			}
			set
			{
				if ((this._РегНомер != value))
				{
					this._РегНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ВходящийНомер", DbType="Int")]
		public System.Nullable<int> ВходящийНомер
		{
			get
			{
				return this._ВходящийНомер;
			}
			set
			{
				if ((this._ВходящийНомер != value))
				{
					this._ВходящийНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаПодписи", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаПодписи
		{
			get
			{
				return this._ДатаПодписи;
			}
			set
			{
				if ((this._ДатаПодписи != value))
				{
					this._ДатаПодписи = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаРегистрации", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаРегистрации
		{
			get
			{
				return this._ДатаРегистрации;
			}
			set
			{
				if ((this._ДатаРегистрации != value))
				{
					this._ДатаРегистрации = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_подразделения", DbType="SmallInt")]
		public System.Nullable<short> id_подразделения
		{
			get
			{
				return this._id_подразделения;
			}
			set
			{
				if ((this._id_подразделения != value))
				{
					this._id_подразделения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомерЭкземпляра", DbType="VarChar(50)")]
		public string НомерЭкземпляра
		{
			get
			{
				return this._НомерЭкземпляра;
			}
			set
			{
				if ((this._НомерЭкземпляра != value))
				{
					this._НомерЭкземпляра = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоЛистовЭкзепляра", DbType="VarChar(50)")]
		public string КоличествоЛистовЭкзепляра
		{
			get
			{
				return this._КоличествоЛистовЭкзепляра;
			}
			set
			{
				if ((this._КоличествоЛистовЭкзепляра != value))
				{
					this._КоличествоЛистовЭкзепляра = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоЛистовПриложения", DbType="VarChar(50)")]
		public string КоличествоЛистовПриложения
		{
			get
			{
				return this._КоличествоЛистовПриложения;
			}
			set
			{
				if ((this._КоличествоЛистовПриложения != value))
				{
					this._КоличествоЛистовПриложения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_получателя", DbType="SmallInt")]
		public System.Nullable<short> id_получателя
		{
			get
			{
				return this._id_получателя;
			}
			set
			{
				if ((this._id_получателя != value))
				{
					this._id_получателя = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_журанала", DbType="Int")]
		public System.Nullable<int> id_журанала
		{
			get
			{
				return this._id_журанала;
			}
			set
			{
				if ((this._id_журанала != value))
				{
					this._id_журанала = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_пользователя", DbType="TinyInt")]
		public System.Nullable<byte> id_пользователя
		{
			get
			{
				return this._id_пользователя;
			}
			set
			{
				if ((this._id_пользователя != value))
				{
					this._id_пользователя = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код_акта", DbType="Int")]
		public System.Nullable<int> Код_акта
		{
			get
			{
				return this._Код_акта;
			}
			set
			{
				if ((this._Код_акта != value))
				{
					this._Код_акта = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИсполнениеНомер", DbType="VarChar(128)")]
		public string ИсполнениеНомер
		{
			get
			{
				return this._ИсполнениеНомер;
			}
			set
			{
				if ((this._ИсполнениеНомер != value))
				{
					this._ИсполнениеНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаИсполнения", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаИсполнения
		{
			get
			{
				return this._ДатаИсполнения;
			}
			set
			{
				if ((this._ДатаИсполнения != value))
				{
					this._ДатаИсполнения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДелоНомер", DbType="VarChar(50)")]
		public string ДелоНомер
		{
			get
			{
				return this._ДелоНомер;
			}
			set
			{
				if ((this._ДелоНомер != value))
				{
					this._ДелоНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Том", DbType="VarChar(50)")]
		public string Том
		{
			get
			{
				return this._Том;
			}
			set
			{
				if ((this._Том != value))
				{
					this._Том = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Лист", DbType="VarChar(50)")]
		public string Лист
		{
			get
			{
				return this._Лист;
			}
			set
			{
				if ((this._Лист != value))
				{
					this._Лист = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Индекс", DbType="VarChar(50)")]
		public string Индекс
		{
			get
			{
				return this._Индекс;
			}
			set
			{
				if ((this._Индекс != value))
				{
					this._Индекс = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазваниеДокумента", DbType="VarChar(256)")]
		public string НазваниеДокумента
		{
			get
			{
				return this._НазваниеДокумента;
			}
			set
			{
				if ((this._НазваниеДокумента != value))
				{
					this._НазваниеДокумента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазваниеПриложения", DbType="VarChar(256)")]
		public string НазваниеПриложения
		{
			get
			{
				return this._НазваниеПриложения;
			}
			set
			{
				if ((this._НазваниеПриложения != value))
				{
					this._НазваниеПриложения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Подписной", DbType="VarChar(50)")]
		public string Подписной
		{
			get
			{
				return this._Подписной;
			}
			set
			{
				if ((this._Подписной != value))
				{
					this._Подписной = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПризнакПечати", DbType="Bit")]
		public System.Nullable<bool> ПризнакПечати
		{
			get
			{
				return this._ПризнакПечати;
			}
			set
			{
				if ((this._ПризнакПечати != value))
				{
					this._ПризнакПечати = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомераПриложений", DbType="VarChar(128)")]
		public string НомераПриложений
		{
			get
			{
				return this._НомераПриложений;
			}
			set
			{
				if ((this._НомераПриложений != value))
				{
					this._НомераПриложений = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КомментарийКому", DbType="VarChar(128)")]
		public string КомментарийКому
		{
			get
			{
				return this._КомментарийКому;
			}
			set
			{
				if ((this._КомментарийКому != value))
				{
					this._КомментарийКому = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КомментарийОткуда", DbType="VarChar(128)")]
		public string КомментарийОткуда
		{
			get
			{
				return this._КомментарийОткуда;
			}
			set
			{
				if ((this._КомментарийОткуда != value))
				{
					this._КомментарийОткуда = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_запретИзменения", DbType="Bit NOT NULL")]
		public bool запретИзменения
		{
			get
			{
				return this._запретИзменения;
			}
			set
			{
				if ((this._запретИзменения != value))
				{
					this._запретИзменения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_номерДокумента", DbType="VarChar(256)")]
		public string номерДокумента
		{
			get
			{
				return this._номерДокумента;
			}
			set
			{
				if ((this._номерДокумента != value))
				{
					this._номерДокумента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_от", DbType="VarChar(50)")]
		public string от
		{
			get
			{
				return this._от;
			}
			set
			{
				if ((this._от != value))
				{
					this._от = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Наличие", DbType="Bit")]
		public System.Nullable<bool> Наличие
		{
			get
			{
				return this._Наличие;
			}
			set
			{
				if ((this._Наличие != value))
				{
					this._Наличие = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_от2", DbType="VarChar(50)")]
		public string от2
		{
			get
			{
				return this._от2;
			}
			set
			{
				if ((this._от2 != value))
				{
					this._от2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_виддокумента", DbType="TinyInt")]
		public System.Nullable<byte> id_виддокумента
		{
			get
			{
				return this._id_виддокумента;
			}
			set
			{
				if ((this._id_виддокумента != value))
				{
					this._id_виддокумента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Акт", DbType="VarChar(50)")]
		public string Акт
		{
			get
			{
				return this._Акт;
			}
			set
			{
				if ((this._Акт != value))
				{
					this._Акт = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПризнакПечатиВЖурнале", DbType="Bit NOT NULL")]
		public bool ПризнакПечатиВЖурнале
		{
			get
			{
				return this._ПризнакПечатиВЖурнале;
			}
			set
			{
				if ((this._ПризнакПечатиВЖурнале != value))
				{
					this._ПризнакПечатиВЖурнале = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаКонтроля", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаКонтроля
		{
			get
			{
				return this._ДатаКонтроля;
			}
			set
			{
				if ((this._ДатаКонтроля != value))
				{
					this._ДатаКонтроля = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДопМатериалы", DbType="VarChar(50)")]
		public string ДопМатериалы
		{
			get
			{
				return this._ДопМатериалы;
			}
			set
			{
				if ((this._ДопМатериалы != value))
				{
					this._ДопМатериалы = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Исполнение", DbType="VarChar(256)")]
		public string Исполнение
		{
			get
			{
				return this._Исполнение;
			}
			set
			{
				if ((this._Исполнение != value))
				{
					this._Исполнение = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НаУдаление", DbType="Bit NOT NULL")]
		public bool НаУдаление
		{
			get
			{
				return this._НаУдаление;
			}
			set
			{
				if ((this._НаУдаление != value))
				{
					this._НаУдаление = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ПолныйВходящийНомер", DbType="VarChar(50)")]
		public string ПолныйВходящийНомер
		{
			get
			{
				return this._ПолныйВходящийНомер;
			}
			set
			{
				if ((this._ПолныйВходящийНомер != value))
				{
					this._ПолныйВходящийНомер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ДатаВозврата", DbType="DateTime")]
		public System.Nullable<System.DateTime> ДатаВозврата
		{
			get
			{
				return this._ДатаВозврата;
			}
			set
			{
				if ((this._ДатаВозврата != value))
				{
					this._ДатаВозврата = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Вернуть", DbType="Bit NOT NULL")]
		public bool Вернуть
		{
			get
			{
				return this._Вернуть;
			}
			set
			{
				if ((this._Вернуть != value))
				{
					this._Вернуть = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Закрыт", DbType="Bit NOT NULL")]
		public bool Закрыт
		{
			get
			{
				return this._Закрыт;
			}
			set
			{
				if ((this._Закрыт != value))
				{
					this._Закрыт = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Перерегистрирован", DbType="BigInt")]
		public System.Nullable<long> Перерегистрирован
		{
			get
			{
				return this._Перерегистрирован;
			}
			set
			{
				if ((this._Перерегистрирован != value))
				{
					this._Перерегистрирован = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_исполнителя", DbType="SmallInt")]
		public System.Nullable<short> id_исполнителя
		{
			get
			{
				return this._id_исполнителя;
			}
			set
			{
				if ((this._id_исполнителя != value))
				{
					this._id_исполнителя = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
